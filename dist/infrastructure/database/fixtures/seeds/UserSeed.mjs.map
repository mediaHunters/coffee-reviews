{"version":3,"sources":["../../../../../src/infrastructure/database/fixtures/seeds/UserSeed.ts"],"sourcesContent":["import { Factory, Seeder } from 'typeorm-seeding';\n\nimport { User } from 'infrastructure/database/entities/User';\nimport { Role } from 'infrastructure/database/entities/Role';\n\nimport { USER_ROLE } from 'infrastructure/database/enum/UserRole';\n\nexport class UserSeed implements Seeder {\n  async run(factory: Factory): Promise<void> {\n    await this.prepareAdminUserSeeds(factory);\n    await this.prepareMemberUserSeeds(factory);\n  }\n\n  private async prepareAdminUserSeeds(factory: Factory): Promise<void> {\n    const adminRole = await factory(Role)().create({\n      name: USER_ROLE.ADMIN,\n    });\n\n    await factory(User)().create({\n      email: 'admin@example.com',\n      role: adminRole,\n      nickname: 'nick admin',\n    });\n  }\n\n  private async prepareMemberUserSeeds(factory: Factory): Promise<void> {\n    const memberRole = await factory(Role)().create({\n      name: USER_ROLE.MEMBER,\n    });\n\n    await factory(User)().create({\n      email: 'user@example.com',\n      role: memberRole,\n      nickname: 'sample_nick',\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;AAOO,IAAM,WAAN,MAAiC;AAAA,EACtC,MAAM,IAAI,SAAiC;AACzC,UAAM,KAAK,sBAAsB,OAAO;AACxC,UAAM,KAAK,uBAAuB,OAAO;AAAA,EAC3C;AAAA,EAEA,MAAc,sBAAsB,SAAiC;AACnE,UAAM,YAAY,MAAM,QAAQ,IAAI,EAAE,EAAE,OAAO;AAAA,MAC7C;AAAA,IACF,CAAC;AAED,UAAM,QAAQ,IAAI,EAAE,EAAE,OAAO;AAAA,MAC3B,OAAO;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ,CAAC;AAAA,EACH;AAAA,EAEA,MAAc,uBAAuB,SAAiC;AACpE,UAAM,aAAa,MAAM,QAAQ,IAAI,EAAE,EAAE,OAAO;AAAA,MAC9C;AAAA,IACF,CAAC;AAED,UAAM,QAAQ,IAAI,EAAE,EAAE,OAAO;AAAA,MAC3B,OAAO;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ,CAAC;AAAA,EACH;AACF;","names":[]}