{"version":3,"sources":["../../../../../src/infrastructure/database/fixtures/factories/UserFactory.ts","../../../../../src/infrastructure/database/entities/User.ts","../../../../../src/infrastructure/database/entities/Base.ts"],"sourcesContent":["import { define } from 'typeorm-seeding';\nimport { hashSync } from 'bcrypt';\nimport * as Faker from 'faker';\n\nimport { User } from 'infrastructure/database/entities/User';\n\nconst SALT = 10;\nconst RANDOM_NUMBER_SIZE = 100;\nexport const userDefined = new User();\n\ndefine(User, (faker: typeof Faker) => {\n  const counter = faker.random.number(RANDOM_NUMBER_SIZE);\n\n  userDefined.email = `cr_user__${counter}@example.com`;\n  userDefined.lastName = faker.name.lastName(counter);\n  userDefined.firstName = faker.name.firstName();\n  userDefined.password = hashSync('reer23EDQ@#', SALT);\n\n  return userDefined;\n});\n","import { Entity, Column, ManyToOne, OneToMany } from 'typeorm';\n\nimport type { Role } from 'infrastructure/database/entities/Role';\nimport type { Review } from 'infrastructure/database/entities/Review';\nimport Model from 'infrastructure/database/entities/Base';\n\n@Entity()\nexport class User extends Model {\n  @Column('text', {\n    nullable: true,\n  })\n  firstName?: string;\n\n  @Column('text', {\n    nullable: true,\n  })\n  lastName?: string;\n\n  @Column('text', { unique: true })\n  nickname!: string;\n\n  @Column('text')\n  email!: string;\n\n  @Column('text')\n  password!: string;\n\n  @ManyToOne('Role', (role: Role) => role.user)\n  role!: Role;\n\n  @OneToMany('Review', (review: Review) => review.user)\n  reviews!: Review[];\n\n  toJson(): any {\n    return {\n      ...this,\n      password: undefined,\n    };\n  }\n}\n","import {\n  CreateDateColumn,\n  UpdateDateColumn,\n  PrimaryGeneratedColumn,\n  BaseEntity,\n} from 'typeorm';\n\nexport default abstract class Model extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id!: string;\n\n  @CreateDateColumn()\n  createdAt!: Date;\n\n  @UpdateDateColumn()\n  updatedAt!: Date;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAuB;AACvB,oBAAyB;;;ACDzB,IAAAA,kBAAqD;;;ACArD,qBAKO;AAEP,IAA8B,QAA9B,cAA4C,0BAAW;AASvD;AAPE;AAAA,MADC,uCAAuB,MAAM;AAAA,GADF,MAE5B;AAGA;AAAA,MADC,iCAAiB;AAAA,GAJU,MAK5B;AAGA;AAAA,MADC,iCAAiB;AAAA,GAPU,MAQ5B;;;ADRK,IAAM,OAAN,cAAmB,MAAM;AAAA,EA0B9B,SAAc;AACZ,WAAO;AAAA,MACL,GAAG;AAAA,MACH,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AA5BE;AAAA,MAHC,wBAAO,QAAQ;AAAA,IACd,UAAU;AAAA,EACZ,CAAC;AAAA,GAHU,KAIX;AAKA;AAAA,MAHC,wBAAO,QAAQ;AAAA,IACd,UAAU;AAAA,EACZ,CAAC;AAAA,GARU,KASX;AAGA;AAAA,MADC,wBAAO,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAAA,GAXrB,KAYX;AAGA;AAAA,MADC,wBAAO,MAAM;AAAA,GAdH,KAeX;AAGA;AAAA,MADC,wBAAO,MAAM;AAAA,GAjBH,KAkBX;AAGA;AAAA,MADC,2BAAU,QAAQ,CAAC,SAAe,KAAK,IAAI;AAAA,GApBjC,KAqBX;AAGA;AAAA,MADC,2BAAU,UAAU,CAAC,WAAmB,OAAO,IAAI;AAAA,GAvBzC,KAwBX;AAxBW,OAAN;AAAA,MADN,wBAAO;AAAA,GACK;;;ADDb,IAAM,OAAO;AACb,IAAM,qBAAqB;AACpB,IAAM,cAAc,IAAI,KAAK;AAAA,IAEpC,+BAAO,MAAM,CAAC,UAAwB;AACpC,QAAM,UAAU,MAAM,OAAO,OAAO,kBAAkB;AAEtD,cAAY,QAAQ,YAAY;AAChC,cAAY,WAAW,MAAM,KAAK,SAAS,OAAO;AAClD,cAAY,YAAY,MAAM,KAAK,UAAU;AAC7C,cAAY,eAAW,wBAAS,eAAe,IAAI;AAEnD,SAAO;AACT,CAAC;","names":["import_typeorm"]}