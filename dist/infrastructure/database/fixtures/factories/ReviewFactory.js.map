{"version":3,"sources":["../../../../../src/infrastructure/database/fixtures/factories/ReviewFactory.ts","../../../../../src/infrastructure/database/entities/Review.ts","../../../../../src/infrastructure/database/entities/Base.ts","../../../../../src/infrastructure/database/fixtures/factories/CoffeeFactory.ts","../../../../../src/infrastructure/database/entities/Coffee.ts","../../../../../src/core/domain/Coffee/CoffeeType.ts","../../../../../src/core/domain/Coffee/CoffeeBurnLvl.ts","../../../../../src/infrastructure/database/enum/CoffeStatus.ts"],"sourcesContent":["import { define } from 'typeorm-seeding';\n\nimport { Review } from 'infrastructure/database/entities/Review';\nimport { coffeeDefined } from 'infrastructure/database/fixtures/factories/CoffeeFactory';\n\ndefine(Review, () => {\n  const review = new Review();\n\n  review.coffee = coffeeDefined;\n  review.rating = 4;\n  review.userId = 'ewjoij12l;1@#EWQ';\n\n  return review;\n});\n","import { Column, Entity, JoinColumn, ManyToOne } from 'typeorm';\n\nimport type { Coffee } from 'infrastructure/database/entities/Coffee';\nimport type { User } from 'infrastructure/database/entities/User';\nimport Model from 'infrastructure/database/entities/Base';\n\n@Entity()\nexport class Review extends Model {\n  @Column('decimal')\n  rating!: number;\n\n  @Column('decimal')\n  look!: number;\n\n  @Column('decimal')\n  smell!: number;\n\n  @Column('decimal')\n  taste!: number;\n\n  @Column('text')\n  coffeeId!: string;\n\n  @ManyToOne('Coffee', (Coffee: Coffee) => Coffee.reviews, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({ name: 'coffee', referencedColumnName: 'id' })\n  coffee!: Coffee;\n\n  @Column('text', { nullable: true })\n  userId!: string;\n\n  @ManyToOne('User', (user: User) => user.reviews)\n  @JoinColumn({ name: 'user', referencedColumnName: 'id' })\n  user!: User;\n}\n","import {\n  CreateDateColumn,\n  UpdateDateColumn,\n  PrimaryGeneratedColumn,\n  BaseEntity,\n} from 'typeorm';\n\nexport default abstract class Model extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id!: string;\n\n  @CreateDateColumn()\n  createdAt!: Date;\n\n  @UpdateDateColumn()\n  updatedAt!: Date;\n}\n","import { define } from 'typeorm-seeding';\n\nimport { Coffee } from 'infrastructure/database/entities/Coffee';\n\nexport const coffeeDefined = new Coffee();\n\ndefine(Coffee, () => {\n  coffeeDefined.CoffeeStatus = 'VERIFIED';\n  coffeeDefined.brand = 'Lavacca';\n  coffeeDefined.burntLvl = 'LIGHT_ROAST';\n  coffeeDefined.createdAt = new Date();\n  coffeeDefined.description = 'Lore ipusm do lor';\n  coffeeDefined.imgUrl = 'http://dumm-url.png';\n  coffeeDefined.name = 'sample coffee name';\n  coffeeDefined.reflink = 'http://another-dumb-link.com';\n\n  return coffeeDefined;\n});\n","import { Column, Entity, OneToMany } from 'typeorm';\n\nimport { COFFEE_TYPE } from 'core/domain/Coffee/CoffeeType';\nimport { COFFEE_BURNT_LVL } from 'core/domain/Coffee/CoffeeBurnLvl';\nimport type { Review } from 'infrastructure/database/entities/Review';\nimport { COFFEE_STATUS } from 'infrastructure/database/enum/CoffeStatus';\nimport Model from 'infrastructure/database/entities/Base';\n\n@Entity()\nexport class Coffee extends Model {\n  @Column('text')\n  brand!: string;\n\n  @Column('text')\n  name!: string;\n\n  @Column({\n    enum: COFFEE_TYPE,\n    nullable: false,\n    type: 'enum',\n  })\n  type!: string;\n\n  @Column('text')\n  imgUrl!: string;\n\n  @Column('text')\n  description!: string;\n\n  @Column({\n    enum: COFFEE_BURNT_LVL,\n    nullable: false,\n    type: 'enum',\n  })\n  burntLvl!: string;\n\n  @Column('text')\n  reflink!: string;\n\n  @Column({\n    enum: COFFEE_STATUS,\n    nullable: false,\n    type: 'enum',\n    default: COFFEE_STATUS.WAITING_QUEUE,\n  })\n  CoffeeStatus!: string;\n\n  @OneToMany('Review', (Review: Review) => Review.coffee, {\n    cascade: true,\n  })\n  reviews!: Review[];\n}\n","export enum COFFEE_TYPE {\n  BEANS = 'BEANS',\n  POWDER = 'POWDER',\n}\n","export enum COFFEE_BURNT_LVL {\n  LIGHT_ROAST = 'LIGHT_ROAST',\n  MEDUIM_ROAST = 'MEDIUM_ROAST',\n  DARK_ROAST = 'DARK_ROAST',\n}\n","export enum COFFEE_STATUS {\n  WAITING_QUEUE = 'WAITING_QUEUE',\n  VERIFIED = 'VERIFIED',\n  BLOCKED = 'BLOCKED',\n}\n"],"mappings":"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","names":["import_typeorm_seeding","import_typeorm","Coffee","import_typeorm","COFFEE_TYPE","COFFEE_BURNT_LVL","COFFEE_STATUS","Review"]}