{"version":3,"sources":["../../../../../src/infrastructure/database/repository/common/IRepository.ts"],"sourcesContent":["import { Query } from 'infrastructure/database/repository/common/Query';\n\nexport interface IRepository<E, R> {\n  custom(): R;\n  delete(\n    condition: string | number | { [key: string]: string | number } | E\n  ): Promise<boolean>;\n  deleteAll(condition: string[] | number[] | E[]): Promise<boolean>;\n  find(id: string): Promise<E | undefined>;\n  findAll(): Promise<E[]>;\n  findBy(condition: Query<E>): Promise<E[]>;\n  findMany(ids: string[]): Promise<E[]>;\n  query(query: string, parameters?: unknown[]): Promise<E[]>;\n  remove(entity: E): Promise<E>;\n  removeAll(entities: E[]): Promise<E[]>;\n  save(entity: E): Promise<E>;\n  saveAll(entities: E[]): Promise<E[]>;\n  update(condition: string | number, data: E): Promise<boolean>;\n  updateAll(condition: string[] | number[], data: E): Promise<boolean>;\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}