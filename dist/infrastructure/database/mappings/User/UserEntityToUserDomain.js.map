{"version":3,"sources":["../../../../../src/infrastructure/database/mappings/User/UserEntityToUserDomain.ts","../../../../../src/core/CoreModuleSymbols.ts","../../../../../src/core/domain/User/User.ts","../../../../../src/infrastructure/InfrastructureModuleSymbols.ts"],"sourcesContent":["import { Mapper } from '@wufe/mapper';\n\nimport { IMapping } from 'core/common/mapper/IMapping';\n\nimport { DOMAIN_MAPPING_IDENTIFIERS } from 'core/CoreModuleSymbols';\n\nimport { User } from 'core/domain/User/User';\nimport { User as UserEntity } from 'infrastructure/database/entities/User';\n\nimport { DATABASE_MAPPING_IDENTIFIERS } from 'infrastructure/InfrastructureModuleSymbols';\n\nexport const UserEntityToUserDomain = (): IMapping => ({\n  configureMapping(mapper: Mapper): void {\n    mapper\n      .createMap<UserEntity, User>(\n        {\n          destination: DOMAIN_MAPPING_IDENTIFIERS.USER_DOMAIN,\n          source: DATABASE_MAPPING_IDENTIFIERS.USER_ENTITY,\n        },\n        User\n      )\n      .forMember('role', (opt) => opt.mapFrom((src) => src.role.name));\n  },\n});\n","export const DOMAIN_APPLICATION_SERVICE_IDENTIFIERS = {\n  USER_SERVICE: Symbol.for('UserService'),\n  AUTHENTICATION_SERVICE: Symbol.for('AuthenticationService'),\n  COFFEE_SERVICE: Symbol.for('CoffeeService'),\n  REVIEW_SERVICE: Symbol.for('ReviewService'),\n};\n\nexport const DOMAIN_MAPPING_IDENTIFIERS = {\n  USER_DOMAIN: Symbol.for('UserDomain'),\n  ROLE_DOMAIN: Symbol.for('RoleDomain'),\n  COFFEE_DOMAIN: Symbol.for('CoffeeDomain'),\n  REVIEW_DOMAIN: Symbol.for('ReviewDomain'),\n};\n\nexport const DOMAIN_REPOSITORY_IDENTIFIERS = {\n  ROLE_REPOSITORY: Symbol.for('RoleRepository'),\n  USER_REPOSITORY: Symbol.for('UserRepository'),\n  COFFEE_REPOSITORY: Symbol.for('CoffeeRepository'),\n  REVIEW_REPOSITORY: Symbol.for('ReviewRepository'),\n};\n\nexport const DOMAIN_UNIT_OF_WORK_IDENTIFIERS = {\n  USER_UNIT_OF_WORK: Symbol.for('UserUnitOfWork'),\n  COFFEE_UNIT_OF_WORK: Symbol.for('CoffeeUnitOfWork'),\n};\n","export class User {\n  constructor(\n    public readonly id: string,\n    public readonly nickname: string,\n    public readonly email: string,\n    public readonly role: string,\n    public readonly password: string,\n    public readonly lastName?: string,\n    public readonly firstName?: string\n  ) {}\n}\n","export const DATABASE_IDENTIFIERS = {\n  ORM: Symbol.for('Orm'),\n};\n\nexport const INFRASTRUCTURE_IDENTIFIERS = {\n  DB_MAPPER: Symbol.for('DBMapper'),\n};\n\nexport const DATABASE_MAPPING_IDENTIFIERS = {\n  USER_ENTITY: Symbol.for('UserEntity'),\n  ROLE_ENTITY: Symbol.for('RoleEntity'),\n  COFFEE_ENTITY: Symbol.for('CoffeeEntity'),\n  REVIEW_ENTITY: Symbol.for('ReviewEntity'),\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,IAAM,yCAAyC;AAAA,EACpD,cAAc,OAAO,IAAI,aAAa;AAAA,EACtC,wBAAwB,OAAO,IAAI,uBAAuB;AAAA,EAC1D,gBAAgB,OAAO,IAAI,eAAe;AAAA,EAC1C,gBAAgB,OAAO,IAAI,eAAe;AAC5C;AAEO,IAAM,6BAA6B;AAAA,EACxC,aAAa,OAAO,IAAI,YAAY;AAAA,EACpC,aAAa,OAAO,IAAI,YAAY;AAAA,EACpC,eAAe,OAAO,IAAI,cAAc;AAAA,EACxC,eAAe,OAAO,IAAI,cAAc;AAC1C;AAEO,IAAM,gCAAgC;AAAA,EAC3C,iBAAiB,OAAO,IAAI,gBAAgB;AAAA,EAC5C,iBAAiB,OAAO,IAAI,gBAAgB;AAAA,EAC5C,mBAAmB,OAAO,IAAI,kBAAkB;AAAA,EAChD,mBAAmB,OAAO,IAAI,kBAAkB;AAClD;AAEO,IAAM,kCAAkC;AAAA,EAC7C,mBAAmB,OAAO,IAAI,gBAAgB;AAAA,EAC9C,qBAAqB,OAAO,IAAI,kBAAkB;AACpD;;;ACxBO,IAAM,OAAN,MAAW;AAAA,EAChB,YACkB,IACA,UACA,OACA,MACA,UACA,UACA,WAChB;AAPgB;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,EACf;AACL;AAVa;;;ACAN,IAAM,uBAAuB;AAAA,EAClC,KAAK,OAAO,IAAI,KAAK;AACvB;AAEO,IAAM,6BAA6B;AAAA,EACxC,WAAW,OAAO,IAAI,UAAU;AAClC;AAEO,IAAM,+BAA+B;AAAA,EAC1C,aAAa,OAAO,IAAI,YAAY;AAAA,EACpC,aAAa,OAAO,IAAI,YAAY;AAAA,EACpC,eAAe,OAAO,IAAI,cAAc;AAAA,EACxC,eAAe,OAAO,IAAI,cAAc;AAC1C;;;AHFO,IAAM,yBAAyB,8BAAiB;AAAA,EACrD,iBAAiB,QAAsB;AACrC,WACG;AAAA,MACC;AAAA,QACE,aAAa,2BAA2B;AAAA,QACxC,QAAQ,6BAA6B;AAAA,MACvC;AAAA,MACA;AAAA,IACF,EACC,UAAU,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC;AAAA,EACnE;AACF,IAZsC;","names":[]}