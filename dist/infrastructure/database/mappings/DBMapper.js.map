{"version":3,"sources":["../../../../src/infrastructure/database/mappings/DBMapper.ts","../../../../src/core/domain/Role/Role.ts","../../../../src/core/CoreModuleSymbols.ts","../../../../src/infrastructure/InfrastructureModuleSymbols.ts","../../../../src/infrastructure/database/mappings/Role/RoleEntityToRoleDomain.ts","../../../../src/core/domain/User/User.ts","../../../../src/infrastructure/database/mappings/User/UserEntityToUserDomain.ts","../../../../src/core/domain/Coffee/Coffee.ts","../../../../src/infrastructure/database/mappings/Coffee/CoffeEntityToCoffeeDomain.ts","../../../../src/core/domain/Review/Review.ts","../../../../src/infrastructure/database/mappings/Review/ReviewEntityToReviewDomain.ts"],"sourcesContent":["import { Mapper } from '@wufe/mapper';\nimport { IMapperConfiguration } from '@wufe/mapper/types/conf/mapper.configuration';\n\nimport { injectable } from 'inversify';\n\nimport { RoleEntityToRoleDomain } from 'infrastructure/database/mappings/Role/RoleEntityToRoleDomain';\nimport { UserEntityToUserDomain } from 'infrastructure/database/mappings/User/UserEntityToUserDomain';\nimport { CoffeeEntityToCoffeeDomain } from 'infrastructure/database/mappings/Coffee/CoffeEntityToCoffeeDomain';\nimport { ReviewEntityToReviewDomain } from 'infrastructure/database/mappings/Review/ReviewEntityToReviewDomain';\n\n@injectable()\nexport class DBMapper {\n  public readonly mapper: Mapper;\n\n  constructor() {\n    this.mapper = new Mapper().withConfiguration(\n      (configuration: IMapperConfiguration) =>\n        configuration\n          .shouldIgnoreSourcePropertiesIfNotInDestination(true)\n          .shouldAutomaticallyMapArrays(true)\n    );\n\n    this.initialize();\n  }\n\n  private initialize(): void {\n    UserEntityToUserDomain().configureMapping(this.mapper);\n    RoleEntityToRoleDomain().configureMapping(this.mapper);\n    CoffeeEntityToCoffeeDomain().configureMapping(this.mapper);\n    ReviewEntityToReviewDomain().configureMapping(this.mapper);\n  }\n}\n","export class Role {\n  constructor(public readonly id: string, public readonly name: string) {}\n}\n","export const DOMAIN_APPLICATION_SERVICE_IDENTIFIERS = {\n  USER_SERVICE: Symbol.for('UserService'),\n  AUTHENTICATION_SERVICE: Symbol.for('AuthenticationService'),\n  COFFEE_SERVICE: Symbol.for('CoffeeService'),\n  REVIEW_SERVICE: Symbol.for('ReviewService'),\n};\n\nexport const DOMAIN_MAPPING_IDENTIFIERS = {\n  USER_DOMAIN: Symbol.for('UserDomain'),\n  ROLE_DOMAIN: Symbol.for('RoleDomain'),\n  COFFEE_DOMAIN: Symbol.for('CoffeeDomain'),\n  REVIEW_DOMAIN: Symbol.for('ReviewDomain'),\n};\n\nexport const DOMAIN_REPOSITORY_IDENTIFIERS = {\n  ROLE_REPOSITORY: Symbol.for('RoleRepository'),\n  USER_REPOSITORY: Symbol.for('UserRepository'),\n  COFFEE_REPOSITORY: Symbol.for('CoffeeRepository'),\n  REVIEW_REPOSITORY: Symbol.for('ReviewRepository'),\n};\n\nexport const DOMAIN_UNIT_OF_WORK_IDENTIFIERS = {\n  USER_UNIT_OF_WORK: Symbol.for('UserUnitOfWork'),\n  COFFEE_UNIT_OF_WORK: Symbol.for('CoffeeUnitOfWork'),\n};\n","export const DATABASE_IDENTIFIERS = {\n  ORM: Symbol.for('Orm'),\n};\n\nexport const INFRASTRUCTURE_IDENTIFIERS = {\n  DB_MAPPER: Symbol.for('DBMapper'),\n};\n\nexport const DATABASE_MAPPING_IDENTIFIERS = {\n  USER_ENTITY: Symbol.for('UserEntity'),\n  ROLE_ENTITY: Symbol.for('RoleEntity'),\n  COFFEE_ENTITY: Symbol.for('CoffeeEntity'),\n  REVIEW_ENTITY: Symbol.for('ReviewEntity'),\n};\n","import { Mapper } from '@wufe/mapper';\n\nimport { IMapping } from 'core/common/mapper/IMapping';\nimport { Role } from 'core/domain/Role/Role';\nimport { DOMAIN_MAPPING_IDENTIFIERS } from 'core/CoreModuleSymbols';\nimport { DATABASE_MAPPING_IDENTIFIERS } from 'infrastructure/InfrastructureModuleSymbols';\nimport { Role as RoleEntity } from 'infrastructure/database/entities/Role';\n\nexport const RoleEntityToRoleDomain = (): IMapping => ({\n  configureMapping(mapper: Mapper): void {\n    mapper.createMap<RoleEntity, Role>(\n      {\n        destination: DOMAIN_MAPPING_IDENTIFIERS.ROLE_DOMAIN,\n        source: DATABASE_MAPPING_IDENTIFIERS.ROLE_ENTITY,\n      },\n      Role\n    );\n  },\n});\n","export class User {\n  constructor(\n    public readonly id: string,\n    public readonly nickname: string,\n    public readonly email: string,\n    public readonly role: string,\n    public readonly password: string,\n    public readonly lastName?: string,\n    public readonly firstName?: string\n  ) {}\n}\n","import { Mapper } from '@wufe/mapper';\n\nimport { IMapping } from 'core/common/mapper/IMapping';\n\nimport { DOMAIN_MAPPING_IDENTIFIERS } from 'core/CoreModuleSymbols';\n\nimport { User } from 'core/domain/User/User';\nimport { User as UserEntity } from 'infrastructure/database/entities/User';\n\nimport { DATABASE_MAPPING_IDENTIFIERS } from 'infrastructure/InfrastructureModuleSymbols';\n\nexport const UserEntityToUserDomain = (): IMapping => ({\n  configureMapping(mapper: Mapper): void {\n    mapper\n      .createMap<UserEntity, User>(\n        {\n          destination: DOMAIN_MAPPING_IDENTIFIERS.USER_DOMAIN,\n          source: DATABASE_MAPPING_IDENTIFIERS.USER_ENTITY,\n        },\n        User\n      )\n      .forMember('role', (opt) => opt.mapFrom((src) => src.role.name));\n  },\n});\n","export class Coffee {\n  constructor(\n    public readonly id: string,\n    public readonly brand: string,\n    public readonly name: string,\n    public readonly type: string,\n    public readonly imgUrl: string,\n    public readonly description: string,\n    public readonly burntLvl: string,\n    public readonly createdAt: Date,\n    public readonly reviews: number,\n    public readonly reflink: string\n  ) {}\n}\n","import { Mapper } from '@wufe/mapper';\n\nimport { IMapping } from 'core/common/mapper/IMapping';\n\nimport { DOMAIN_MAPPING_IDENTIFIERS } from 'core/CoreModuleSymbols';\nimport { Coffee } from 'core/domain/Coffee/Coffee';\n\nimport { Coffee as CoffeeEntity } from 'infrastructure/database/entities/Coffee';\nimport { DATABASE_MAPPING_IDENTIFIERS } from 'infrastructure/InfrastructureModuleSymbols';\n\nexport const CoffeeEntityToCoffeeDomain = (): IMapping => ({\n  configureMapping(mapper: Mapper): void {\n    mapper.createMap<CoffeeEntity, Coffee>(\n      {\n        destination: DOMAIN_MAPPING_IDENTIFIERS.COFFEE_DOMAIN,\n        source: DATABASE_MAPPING_IDENTIFIERS.COFFEE_ENTITY,\n      },\n      Coffee\n    );\n  },\n});\n","export class Review {\n  constructor(\n    public readonly id: string,\n    public readonly look: number,\n    public readonly smell: number,\n    public readonly taste: number,\n    public readonly rating: number,\n    public readonly coffeeId: string,\n    public readonly userId: string\n  ) {}\n}\n","import { Mapper } from '@wufe/mapper';\n\nimport { IMapping } from 'core/common/mapper/IMapping';\nimport { DOMAIN_MAPPING_IDENTIFIERS } from 'core/CoreModuleSymbols';\nimport { Review } from 'core/domain/Review/Review';\nimport { Review as ReviewEntity } from 'infrastructure/database/entities/Review';\nimport { DATABASE_MAPPING_IDENTIFIERS } from 'infrastructure/InfrastructureModuleSymbols';\n\nexport const ReviewEntityToReviewDomain = (): IMapping => ({\n  configureMapping(mapper: Mapper): void {\n    mapper.createMap<ReviewEntity, Review>(\n      {\n        destination: DOMAIN_MAPPING_IDENTIFIERS.REVIEW_DOMAIN,\n        source: DATABASE_MAPPING_IDENTIFIERS.REVIEW_ENTITY,\n      },\n      Review\n    );\n  },\n});\n"],"mappings":"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","names":[]}