{"version":3,"sources":["../../../../src/infrastructure/database/cli/dbReload.ts"],"sourcesContent":["import { join } from 'path';\n\nimport * as yargs from 'yargs';\n\nimport { Connection, createConnection, ConnectionOptions } from 'typeorm';\n\nconst {\n  type,\n  host,\n  port,\n  username,\n  password,\n  database,\n  logging,\n  migrations,\n  // eslint-disable-next-line import/no-dynamic-require, @typescript-eslint/no-var-requires\n} = require(join(process.cwd(), 'ormconfig.cjs'))[0];\n\nyargs\n  .command({\n    command: 'reload',\n    describe: 'Reload Database',\n    handler: () => {\n      try {\n        const connectionOptions: ConnectionOptions = {\n          database,\n          host,\n          logging,\n          migrations,\n          password,\n          port,\n          type,\n          username,\n        };\n        createConnection(connectionOptions).then(\n          async (connection: Connection) => {\n            await connection.dropDatabase();\n            await connection.runMigrations();\n            process.exit(0);\n          }\n        );\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error when reloading database', error);\n        process.exit(1);\n      }\n    },\n  })\n  .parse();\n"],"mappings":";;;;;;;;;AAIA;AAJA,SAAS,YAAY;AAErB,YAAY,WAAW;AAIvB,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAEF,IAAI,UAAQ,KAAK,QAAQ,IAAI,GAAG,eAAe,CAAC,EAAE,CAAC;AAGhD,cAAQ;AAAA,EACP,SAAS;AAAA,EACT,UAAU;AAAA,EACV,SAAS,MAAM;AACb,QAAI;AACF,YAAM,oBAAuC;AAAA,QAC3C;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,uBAAiB,iBAAiB,EAAE;AAAA,QAClC,OAAO,eAA2B;AAChC,gBAAM,WAAW,aAAa;AAC9B,gBAAM,WAAW,cAAc;AAC/B,kBAAQ,KAAK,CAAC;AAAA,QAChB;AAAA,MACF;AAAA,IACF,SAAS,OAAP;AAEA,cAAQ,MAAM,iCAAiC,KAAK;AACpD,cAAQ,KAAK,CAAC;AAAA,IAChB;AAAA,EACF;AACF,CAAC,EACA,MAAM;","names":[]}