{"version":3,"sources":["../src/ui/common/config/application/express/ExpressApplication.ts","../src/ui/common/config/swagger.json"],"sourcesContent":["import express from 'express';\nimport morgan from 'morgan';\nimport methodOverride from 'method-override';\nimport helmet from 'helmet';\nimport cors from 'cors';\nimport swaggerUi from 'swagger-ui-express';\nimport { inject, injectable } from 'inversify';\n\nimport { IApplication } from 'ui/common/config/application/common/IApplication';\nimport { BaseApplication } from 'ui/common/config/application/common/BaseApplication';\nimport { ILogger } from 'ui/common/config/logger/ILogger';\nimport {\n  SWAGGER_BASE_PATH,\n  SWAGGER_HOST,\n} from 'ui/common/config/consts/variables';\nimport { UI_APPLICATION_IDENTIFIERS } from 'ui/UIModuleSymbols';\n\nimport swaggerDocument from 'ui/common/config/swagger.json';\n\n@injectable()\nexport class ExpressApplication\n  extends BaseApplication<express.Application>\n  implements IApplication\n{\n  private readonly logger: ILogger;\n\n  private readonly router: express.Router;\n\n  constructor(\n    @inject(UI_APPLICATION_IDENTIFIERS.LOGGER_WINSTON) logger: ILogger,\n    @inject(UI_APPLICATION_IDENTIFIERS.EXPRESS) app: express.Application,\n    @inject(UI_APPLICATION_IDENTIFIERS.EXPRESS_ROUTER) router: express.Router\n  ) {\n    super(app);\n    this.logger = logger;\n    this.router = router;\n  }\n\n  public initialize(): void {\n    this.initializeSecurity();\n    this.initializeBodyParsers();\n    if (process.env.NODE_ENV !== 'test') {\n      this.initializeLogging();\n    }\n    this.initializeHandlers();\n    this.initializePlugins();\n    this.initializeExtensions();\n  }\n\n  public initializeSecurity(): void {\n    this.app.use(express.urlencoded({ extended: false }));\n  }\n\n  public initializeBodyParsers(): void {\n    this.app.use(express.json());\n  }\n\n  public initializeLogging(): void {\n    this.logger.initialize();\n    morgan.token(\n      'body',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (req): string => `\\nREQUEST BODY: ${JSON.stringify((req as any).body)}`\n    );\n    /**\n     * @description you may consider what you want to log on production\n     * keep in mind to obfuscate sensitive data if you want to log request or response bodies\n     * format can be moved to some other place for easier configuration\n     */\n    this.app.use(\n      morgan(\n        ':method :url HTTP/:http-version :status :response-time ms :referrer :user-agent - :body',\n        { stream: this.logger }\n      )\n    );\n  }\n\n  public initializeHandlers(): void {\n    Error('NOT IMPLEMENTED');\n  }\n\n  public initializePlugins(): void {\n    this.app.use(methodOverride());\n    this.app.use(helmet());\n    this.app.use(cors());\n  }\n\n  public initializeExtensions(): void {\n    if (SWAGGER_HOST) {\n      swaggerDocument.host = SWAGGER_HOST;\n      this.app.use(\n        SWAGGER_BASE_PATH,\n        swaggerUi.serve,\n        swaggerUi.setup(swaggerDocument)\n      );\n    }\n  }\n}\n","{\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"version\": \"1.0.0\",\r\n    \"title\": \"CR API\",\r\n    \"description\": \"Api documentation for CR project \\n\",\r\n    \"contact\": {\r\n      \"name\": \"MediaHunters\"\r\n    },\r\n    \"license\": {\r\n      \"name\": \"[PUT LICENSE NAME HERE]\"\r\n    }\r\n  },\r\n  \"host\": \"localhost:3000\",\r\n  \"basePath\": \"/v1\",\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"auth\",\r\n      \"description\": \"Api endpoints related to authentication\"\r\n    }\r\n  ],\r\n  \"securityDefinitions\": {\r\n    \"bearer\": {\r\n      \"type\": \"apiKey\",\r\n      \"name\": \"Authorization\",\r\n      \"in\": \"header\"\r\n    }\r\n  },\r\n  \"schemes\": [\"http\", \"https\"],\r\n  \"consumes\": [\"application/json\"],\r\n  \"produces\": [\"application/json\"],\r\n  \"paths\": {\r\n    \"/user\": {\r\n      \"delete\": {\r\n        \"security\": [\r\n          {\r\n            \"bearer\": []\r\n          }\r\n        ],\r\n        \"tags\": [\"user\"],\r\n        \"description\": \"User endpoint\",\r\n        \"consumes\": [\"application/json\"],\r\n        \"produces\": [\"application/json\"],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"body\",\r\n            \"name\": \"body\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/UserDeleteRequest\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Returns authentication token\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,aAAa;AACpB,OAAO,YAAY;AACnB,OAAO,oBAAoB;AAC3B,OAAO,YAAY;AACnB,OAAO,UAAU;AACjB,OAAO,eAAe;AACtB,SAAS,QAAQ,kBAAkB;;;ACNnC;AAAA,EACE,SAAW;AAAA,EACX,MAAQ;AAAA,IACN,SAAW;AAAA,IACX,OAAS;AAAA,IACT,aAAe;AAAA,IACf,SAAW;AAAA,MACT,MAAQ;AAAA,IACV;AAAA,IACA,SAAW;AAAA,MACT,MAAQ;AAAA,IACV;AAAA,EACF;AAAA,EACA,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,MAAQ;AAAA,IACN;AAAA,MACE,MAAQ;AAAA,MACR,aAAe;AAAA,IACjB;AAAA,EACF;AAAA,EACA,qBAAuB;AAAA,IACrB,QAAU;AAAA,MACR,MAAQ;AAAA,MACR,MAAQ;AAAA,MACR,IAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,SAAW,CAAC,QAAQ,OAAO;AAAA,EAC3B,UAAY,CAAC,kBAAkB;AAAA,EAC/B,UAAY,CAAC,kBAAkB;AAAA,EAC/B,OAAS;AAAA,IACP,SAAS;AAAA,MACP,QAAU;AAAA,QACR,UAAY;AAAA,UACV;AAAA,YACE,QAAU,CAAC;AAAA,UACb;AAAA,QACF;AAAA,QACA,MAAQ,CAAC,MAAM;AAAA,QACf,aAAe;AAAA,QACf,UAAY,CAAC,kBAAkB;AAAA,QAC/B,UAAY,CAAC,kBAAkB;AAAA,QAC/B,YAAc;AAAA,UACZ;AAAA,YACE,IAAM;AAAA,YACN,MAAQ;AAAA,YACR,UAAY;AAAA,YACZ,QAAU;AAAA,cACR,MAAQ;AAAA,YACV;AAAA,UACF;AAAA,QACF;AAAA,QACA,WAAa;AAAA,UACX,OAAO;AAAA,YACL,aAAe;AAAA,UACjB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;ADzCO,IAAM,qBAAN,cACG,gBAEV;AAAA,EAKE,YACqD,QACP,KACO,QACnD;AACA,UAAM,GAAG;AACT,SAAK,SAAS;AACd,SAAK,SAAS;AAAA,EAChB;AAAA,EAEO,aAAmB;AACxB,SAAK,mBAAmB;AACxB,SAAK,sBAAsB;AAC3B,QAAI,QAAQ,IAAI,aAAa,QAAQ;AACnC,WAAK,kBAAkB;AAAA,IACzB;AACA,SAAK,mBAAmB;AACxB,SAAK,kBAAkB;AACvB,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EAEO,qBAA2B;AAChC,SAAK,IAAI,IAAI,QAAQ,WAAW,EAAE,UAAU,MAAM,CAAC,CAAC;AAAA,EACtD;AAAA,EAEO,wBAA8B;AACnC,SAAK,IAAI,IAAI,QAAQ,KAAK,CAAC;AAAA,EAC7B;AAAA,EAEO,oBAA0B;AAC/B,SAAK,OAAO,WAAW;AACvB,WAAO;AAAA,MACL;AAAA;AAAA,MAEA,CAAC,QAAgB;AAAA,gBAAmB,KAAK,UAAW,IAAY,IAAI;AAAA,IACtE;AAMA,SAAK,IAAI;AAAA,MACP;AAAA,QACE;AAAA,QACA,EAAE,QAAQ,KAAK,OAAO;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AAAA,EAEO,qBAA2B;AAChC,UAAM,iBAAiB;AAAA,EACzB;AAAA,EAEO,oBAA0B;AAC/B,SAAK,IAAI,IAAI,eAAe,CAAC;AAC7B,SAAK,IAAI,IAAI,OAAO,CAAC;AACrB,SAAK,IAAI,IAAI,KAAK,CAAC;AAAA,EACrB;AAAA,EAEO,uBAA6B;AAClC,QAAI,cAAc;AAChB,sBAAgB,OAAO;AACvB,WAAK,IAAI;AAAA,QACP;AAAA,QACA,UAAU;AAAA,QACV,UAAU,MAAM,eAAe;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AACF;AA7Ea;AAAA,qBAAN;AAAA,EADN,WAAW;AAAA,EAUR,mBAAC,OAAO,2BAA2B,cAAc;AAAA,EACjD,mBAAC,OAAO,2BAA2B,OAAO;AAAA,EAC1C,mBAAC,OAAO,2BAA2B,cAAc;AAAA,GAXxC;","names":[]}