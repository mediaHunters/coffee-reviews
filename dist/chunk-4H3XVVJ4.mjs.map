{"version":3,"sources":["../src/dependency/common/CommonModule.ts"],"sourcesContent":["import { interfaces } from 'inversify';\n\nimport { BaseModule } from 'dependency/BaseModule';\n\nimport { DBMapper } from 'infrastructure/database/mappings/DBMapper';\nimport { CROrm } from 'infrastructure/database/orm/CROrm';\nimport { IOrm } from 'infrastructure/database/orm/IOrm';\n\nimport {\n  DATABASE_IDENTIFIERS,\n  INFRASTRUCTURE_IDENTIFIERS,\n} from 'infrastructure/InfrastructureModuleSymbols';\n\nimport { UIMapper } from 'ui/common/mappings/UIMapper';\nimport { UI_IDENTIFIERS } from 'ui/UIModuleSymbols';\n\nexport class CommonModule extends BaseModule {\n  constructor() {\n    super((bind: interfaces.Bind) => {\n      this.init(bind);\n    });\n  }\n\n  public init(bind: interfaces.Bind): void {\n    this.provideOrm(bind);\n\n    this.provideDBMapper(bind);\n    this.provideUIMapper(bind);\n  }\n\n  private provideUIMapper(bind: interfaces.Bind): void {\n    bind<UIMapper>(UI_IDENTIFIERS.UI_MAPPER).to(UIMapper);\n  }\n\n  private provideDBMapper(bind: interfaces.Bind): void {\n    bind<DBMapper>(INFRASTRUCTURE_IDENTIFIERS.DB_MAPPER).to(DBMapper);\n  }\n\n  private provideOrm(bind: interfaces.Bind): void {\n    bind<IOrm>(DATABASE_IDENTIFIERS.ORM).to(CROrm);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAgBO,IAAM,eAAN,cAA2B,WAAW;AAAA,EAC3C,cAAc;AACZ,UAAM,CAAC,SAA0B;AAC/B,WAAK,KAAK,IAAI;AAAA,IAChB,CAAC;AAAA,EACH;AAAA,EAEO,KAAK,MAA6B;AACvC,SAAK,WAAW,IAAI;AAEpB,SAAK,gBAAgB,IAAI;AACzB,SAAK,gBAAgB,IAAI;AAAA,EAC3B;AAAA,EAEQ,gBAAgB,MAA6B;AACnD,SAAe,eAAe,SAAS,EAAE,GAAG,QAAQ;AAAA,EACtD;AAAA,EAEQ,gBAAgB,MAA6B;AACnD,SAAe,2BAA2B,SAAS,EAAE,GAAG,QAAQ;AAAA,EAClE;AAAA,EAEQ,WAAW,MAA6B;AAC9C,SAAW,qBAAqB,GAAG,EAAE,GAAG,KAAK;AAAA,EAC/C;AACF;AAzBa;","names":[]}