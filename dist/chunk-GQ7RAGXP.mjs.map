{"version":3,"sources":["../src/ui/common/config/logger/WinstonLogger.ts"],"sourcesContent":["import { format as winstonFormat, Logger, transports } from 'winston';\nimport { Format } from 'logform';\nimport DailyRotateFile from 'winston-daily-rotate-file';\n\nimport { inject, injectable } from 'inversify';\n\nimport { BaseLogger } from 'ui/common/config/logger/BaseLogger';\nimport { ILogger } from 'ui/common/config/logger/ILogger';\n\nimport { UI_APPLICATION_IDENTIFIERS } from 'ui/UIModuleSymbols';\nimport { IS_DEVELOPMENT } from 'ui/common/config/consts/variables';\n\n@injectable()\nexport class WinstonLogger extends BaseLogger<Logger> implements ILogger {\n  private readonly format: Format;\n\n  constructor(\n    @inject(UI_APPLICATION_IDENTIFIERS.LOGGER_FORMAT) format: Format,\n    @inject(UI_APPLICATION_IDENTIFIERS.LOGGER) logger: Logger\n  ) {\n    super(logger);\n    this.format = format;\n  }\n\n  public initialize(): void {\n    const loggerConfig = {\n      datePattern: 'YYYY-MM-DD',\n      dirname: './logs',\n      format: this.format,\n      maxFiles: '14d',\n      maxSize: '20m',\n      zippedArchive: true,\n    };\n\n    this.logger.add(\n      new DailyRotateFile({\n        filename: 'cr-%DATE%.info.log',\n        level: 'info',\n        ...loggerConfig,\n      })\n    );\n\n    if (IS_DEVELOPMENT) {\n      this.logger.add(\n        new transports.Console({\n          format: winstonFormat.combine(winstonFormat.colorize(), this.format),\n          handleExceptions: true,\n          level: 'debug',\n        })\n      );\n    }\n  }\n\n  write(message: string): void {\n    this.logger.info(message);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA,SAAS,UAAU,eAAuB,kBAAkB;AAE5D,OAAO,qBAAqB;AAE5B,SAAS,QAAQ,kBAAkB;AAS5B,IAAM,gBAAN,cAA4B,WAAsC;AAAA,EAGvE,YACoD,QACP,QAC3C;AACA,UAAM,MAAM;AACZ,SAAK,SAAS;AAAA,EAChB;AAAA,EAEO,aAAmB;AACxB,UAAM,eAAe;AAAA,MACnB,aAAa;AAAA,MACb,SAAS;AAAA,MACT,QAAQ,KAAK;AAAA,MACb,UAAU;AAAA,MACV,SAAS;AAAA,MACT,eAAe;AAAA,IACjB;AAEA,SAAK,OAAO;AAAA,MACV,IAAI,gBAAgB;AAAA,QAClB,UAAU;AAAA,QACV,OAAO;AAAA,QACP,GAAG;AAAA,MACL,CAAC;AAAA,IACH;AAEA,QAAI,gBAAgB;AAClB,WAAK,OAAO;AAAA,QACV,IAAI,WAAW,QAAQ;AAAA,UACrB,QAAQ,cAAc,QAAQ,cAAc,SAAS,GAAG,KAAK,MAAM;AAAA,UACnE,kBAAkB;AAAA,UAClB,OAAO;AAAA,QACT,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAM,SAAuB;AAC3B,SAAK,OAAO,KAAK,OAAO;AAAA,EAC1B;AACF;AA3Ca,gBAAN;AAAA,EADN,WAAW;AAAA,EAKR,mBAAC,OAAO,2BAA2B,aAAa;AAAA,EAChD,mBAAC,OAAO,2BAA2B,MAAM;AAAA,GALhC;","names":[]}