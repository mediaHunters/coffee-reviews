{"version":3,"sources":["../src/core/applicationServices/Review/ReviewService.ts"],"sourcesContent":["import { inject, injectable } from 'inversify';\n\nimport { UpdateResult } from 'typeorm';\n\nimport { IReviewService } from 'core/applicationServices/Review/IReviewService';\nimport { AddReviewCommand } from 'core/applicationServices/Review/requests/command/AddReviewCommand';\nimport { DOMAIN_REPOSITORY_IDENTIFIERS } from 'core/CoreModuleSymbols';\nimport { Review } from 'core/domain/Review/Review';\nimport { IReviewRepository } from 'core/domainServices/Review/IReviewRepository';\nimport { AddReviewRepositoryCommand } from 'core/domainServices/Review/requests/command/AddReviewRepositoryCommand';\nimport { GetReviewsRepositoryQuery } from 'core/domainServices/Review/requests/query/GetReviewsRepositoryQuery';\nimport { GetUserReviewsQuery } from 'core/applicationServices/Review/requests/query/GetUserReviewsQuery';\nimport { UpdateReviewCommand } from 'core/applicationServices/Review/requests/command/UpdateReviewCommand';\nimport { UpdateReviewRepositoryCommand } from 'core/domainServices/Review/requests/command/UpdateReviewRepositoryCommand';\nimport { DeleteReviewCommand } from 'core/applicationServices/Review/requests/command/DeleteReviewCommand';\nimport { DeleteReviewRepositoryCommand } from 'core/domainServices/Review/requests/command/DeleteReviewRepositoryCommand';\n\n@injectable()\nexport class ReviewService implements IReviewService {\n  constructor(\n    @inject(DOMAIN_REPOSITORY_IDENTIFIERS.REVIEW_REPOSITORY)\n    private readonly reviewRepository: IReviewRepository\n  ) {}\n\n  getAll({ userId }: GetUserReviewsQuery): Promise<Review[]> {\n    return this.reviewRepository.getReviews(\n      new GetReviewsRepositoryQuery(userId)\n    );\n  }\n\n  add({\n    userId,\n    coffeeId,\n    rating,\n    look,\n    smell,\n    taste,\n  }: AddReviewCommand): Promise<Review> {\n    return this.reviewRepository.addReview(\n      new AddReviewRepositoryCommand(\n        userId,\n        coffeeId,\n        rating,\n        look,\n        smell,\n        taste\n      )\n    );\n  }\n\n  update({ reviewId, review }: UpdateReviewCommand): Promise<UpdateResult> {\n    return this.reviewRepository.updateReview(\n      new UpdateReviewRepositoryCommand(review, reviewId)\n    );\n  }\n\n  delete({ reviewId }: DeleteReviewCommand): Promise<Review> {\n    return this.reviewRepository.deleteReview(\n      new DeleteReviewRepositoryCommand(reviewId)\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,QAAQ,kBAAkB;AAkB5B,IAAM,gBAAN,MAA8C;AAAA,EACnD,YAEmB,kBACjB;AADiB;AAAA,EAChB;AAAA,EAEH,OAAO,EAAE,OAAO,GAA2C;AACzD,WAAO,KAAK,iBAAiB;AAAA,MAC3B,IAAI,0BAA0B,MAAM;AAAA,IACtC;AAAA,EACF;AAAA,EAEA,IAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAsC;AACpC,WAAO,KAAK,iBAAiB;AAAA,MAC3B,IAAI;AAAA,QACF;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,OAAO,EAAE,UAAU,OAAO,GAA+C;AACvE,WAAO,KAAK,iBAAiB;AAAA,MAC3B,IAAI,8BAA8B,QAAQ,QAAQ;AAAA,IACpD;AAAA,EACF;AAAA,EAEA,OAAO,EAAE,SAAS,GAAyC;AACzD,WAAO,KAAK,iBAAiB;AAAA,MAC3B,IAAI,8BAA8B,QAAQ;AAAA,IAC5C;AAAA,EACF;AACF;AA3Ca;AAAA,gBAAN;AAAA,EADN,WAAW;AAAA,EAGR,mBAAC,OAAO,8BAA8B,iBAAiB;AAAA,GAF9C;","names":[]}