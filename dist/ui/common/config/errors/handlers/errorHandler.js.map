{"version":3,"sources":["../../../../../../src/ui/common/config/errors/handlers/errorHandler.ts","../../../../../../src/core/common/errors/BaseError.ts","../../../../../../src/core/common/errors/CoreError.ts","../../../../../../src/ui/common/config/errors/UserInterfaceError.ts","../../../../../../src/ui/common/config/errors/models/ErrorResponse.ts"],"sourcesContent":["import { Application, NextFunction, Request, Response } from 'express';\n\nimport {\n  INTERNAL_SERVER_ERROR,\n  NOT_FOUND,\n  UNPROCESSABLE_ENTITY,\n} from 'http-status-codes';\n\nimport { BaseError } from 'core/common/errors/BaseError';\nimport { CoreError } from 'core/common/errors/CoreError';\nimport { UserInterfaceError } from 'ui/common/config/errors/UserInterfaceError';\nimport { ErrorResponse } from 'ui/common/config/errors/models/ErrorResponse';\n\nexport const errorHandler = (app: Application) =>\n  app.use(\n    (error: BaseError, req: Request, res: Response, next: NextFunction) => {\n      next();\n      switch (error.constructor) {\n        case UserInterfaceError:\n          return res\n            .status((error as UserInterfaceError).status)\n            .json(new ErrorResponse(error.code, error.message));\n        case CoreError:\n          return res\n            .status(UNPROCESSABLE_ENTITY)\n            .json(new ErrorResponse(error.code, error.message));\n        case BaseError:\n          return res\n            .status(NOT_FOUND)\n            .json(new ErrorResponse(error.code, error.message));\n        default:\n          return res\n            .status(INTERNAL_SERVER_ERROR)\n            .json(\n              new ErrorResponse(INTERNAL_SERVER_ERROR.toString(), error.message)\n            );\n      }\n    }\n  );\n","export class BaseError implements Error {\n  constructor(\n    public readonly code?: string,\n    public readonly message: string = '',\n    public readonly name: string = ''\n  ) {}\n}\n","import { BaseError } from 'core/common/errors/BaseError';\n\nexport class CoreError extends BaseError {}\n","import { BaseError } from 'core/common/errors/BaseError';\n\nexport class UserInterfaceError extends BaseError {\n  constructor(\n    public readonly status: number,\n    public readonly code?: string,\n    public readonly message: string = '',\n    public readonly name: string = ''\n  ) {\n    super(code, message, name);\n  }\n}\n","export class ErrorResponse {\n  constructor(\n    public readonly code?: string,\n    public readonly message?: string\n  ) {}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,+BAIO;;;ACNA,IAAM,YAAN,MAAiC;AAAA,EACtC,YACkB,MACA,UAAkB,IAClB,OAAe,IAC/B;AAHgB;AACA;AACA;AAAA,EACf;AACL;;;ACJO,IAAM,YAAN,cAAwB,UAAU;AAAC;;;ACAnC,IAAM,qBAAN,cAAiC,UAAU;AAAA,EAChD,YACkB,QACA,MACA,UAAkB,IAClB,OAAe,IAC/B;AACA,UAAM,MAAM,SAAS,IAAI;AALT;AACA;AACA;AACA;AAAA,EAGlB;AACF;;;ACXO,IAAM,gBAAN,MAAoB;AAAA,EACzB,YACkB,MACA,SAChB;AAFgB;AACA;AAAA,EACf;AACL;;;AJQO,IAAM,eAAe,CAAC,QAC3B,IAAI;AAAA,EACF,CAAC,OAAkB,KAAc,KAAe,SAAuB;AACrE,SAAK;AACL,YAAQ,MAAM,aAAa;AAAA,MACzB,KAAK;AACH,eAAO,IACJ,OAAQ,MAA6B,MAAM,EAC3C,KAAK,IAAI,cAAc,MAAM,MAAM,MAAM,OAAO,CAAC;AAAA,MACtD,KAAK;AACH,eAAO,IACJ,OAAO,6CAAoB,EAC3B,KAAK,IAAI,cAAc,MAAM,MAAM,MAAM,OAAO,CAAC;AAAA,MACtD,KAAK;AACH,eAAO,IACJ,OAAO,kCAAS,EAChB,KAAK,IAAI,cAAc,MAAM,MAAM,MAAM,OAAO,CAAC;AAAA,MACtD;AACE,eAAO,IACJ,OAAO,8CAAqB,EAC5B;AAAA,UACC,IAAI,cAAc,+CAAsB,SAAS,GAAG,MAAM,OAAO;AAAA,QACnE;AAAA,IACN;AAAA,EACF;AACF;","names":[]}