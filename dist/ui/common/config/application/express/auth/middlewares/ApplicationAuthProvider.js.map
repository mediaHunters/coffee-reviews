{"version":3,"sources":["../../../../../../../../src/ui/common/config/application/express/auth/middlewares/ApplicationAuthProvider.ts","../../../../../../../../src/ui/common/models/User.ts","../../../../../../../../src/ui/UIModuleSymbols.ts","../../../../../../../../src/core/CoreModuleSymbols.ts","../../../../../../../../src/core/applicationServices/User/requests/query/FetchUserQuery.ts","../../../../../../../../src/ui/common/config/application/express/auth/models/Principal.ts"],"sourcesContent":["import { inject, injectable } from 'inversify';\nimport { interfaces } from 'inversify-express-utils';\nimport { NextFunction, Request, Response } from 'express';\n\nimport { User } from 'ui/common/models/User';\nimport { JWTTokenUtil } from 'ui/common/config/application/common/auth/utils/JWTTokenUtil';\nimport { UI_APPLICATION_IDENTIFIERS } from 'ui/UIModuleSymbols';\nimport { TokenPayload } from 'ui/common/config/application/express/auth/types/TokenPayload';\n\nimport { DOMAIN_APPLICATION_SERVICE_IDENTIFIERS } from 'core/CoreModuleSymbols';\nimport { FetchUserQuery } from 'core/applicationServices/User/requests/query/FetchUserQuery';\nimport { UserService } from 'core/applicationServices/User/UserService';\nimport { Principal } from 'ui/common/config/application/express/auth/models/Principal';\n\n@injectable()\nexport class ApplicationAuthProvider implements interfaces.AuthProvider {\n  @inject(DOMAIN_APPLICATION_SERVICE_IDENTIFIERS.USER_SERVICE)\n  private readonly userService!: UserService;\n\n  @inject(UI_APPLICATION_IDENTIFIERS.JWT_TOKEN_UTIL)\n  private readonly jwtTokenUtil!: JWTTokenUtil;\n\n  public async getUser(\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<interfaces.Principal> {\n    const token = this.jwtTokenUtil.getTokenFromHeaders(req.headers);\n    if (!token) {\n      return new Principal(undefined);\n    }\n    const tokenData = await this.jwtTokenUtil.decodeToken<TokenPayload>(token);\n\n    if (!tokenData) {\n      return new Principal(undefined);\n    }\n\n    const { user } = tokenData;\n    try {\n      const existingUser = await this.userService.fetchUser(\n        new FetchUserQuery(user.id)\n      );\n\n      if (!existingUser) {\n        return new Principal(undefined);\n      }\n\n      return new Principal(\n        new User(user.id, user.nickname, user.email, user.role)\n      );\n    } catch (error) {\n      next(error);\n      return new Principal(undefined);\n    }\n  }\n}\n","export class User {\n  constructor(\n    public readonly id: string,\n    public readonly nickname: string,\n    public readonly email: string,\n    public readonly role: string\n  ) {}\n}\n","export const UI_IDENTIFIERS = {\n  UI_MAPPER: Symbol.for('UIMapper'),\n};\n\nexport const UI_APPLICATION_IDENTIFIERS = {\n  EXPRESS: Symbol.for('Express'),\n  EXPRESS_ROUTER: Symbol.for('ExpressRouter'),\n\n  EXPRESS_APPLICATION: Symbol.for('ExpressApplication'),\n  INVERSIFY_APPLICATION: Symbol.for('InversifyExpressApplication'),\n  JWT_TOKEN_UTIL: Symbol.for('JWTTokenUtil'),\n  JWT_AUTHENTICATION_HANDLER: Symbol.for('JWTAuthenticationHandler'),\n\n  LOGGER: Symbol.for('Logger'),\n  LOGGER_FORMAT: Symbol.for('WinstonFormat'),\n  LOGGER_WINSTON: Symbol.for('WinstonLogger'),\n};\n\nexport const UI_MAPPINGS_IDENTIFIERS = {\n  USER_UI: Symbol.for('UserUI'),\n};\n","export const DOMAIN_APPLICATION_SERVICE_IDENTIFIERS = {\n  USER_SERVICE: Symbol.for('UserService'),\n  AUTHENTICATION_SERVICE: Symbol.for('AuthenticationService'),\n  COFFEE_SERVICE: Symbol.for('CoffeeService'),\n  REVIEW_SERVICE: Symbol.for('ReviewService'),\n};\n\nexport const DOMAIN_MAPPING_IDENTIFIERS = {\n  USER_DOMAIN: Symbol.for('UserDomain'),\n  ROLE_DOMAIN: Symbol.for('RoleDomain'),\n  COFFEE_DOMAIN: Symbol.for('CoffeeDomain'),\n  REVIEW_DOMAIN: Symbol.for('ReviewDomain'),\n};\n\nexport const DOMAIN_REPOSITORY_IDENTIFIERS = {\n  ROLE_REPOSITORY: Symbol.for('RoleRepository'),\n  USER_REPOSITORY: Symbol.for('UserRepository'),\n  COFFEE_REPOSITORY: Symbol.for('CoffeeRepository'),\n  REVIEW_REPOSITORY: Symbol.for('ReviewRepository'),\n};\n\nexport const DOMAIN_UNIT_OF_WORK_IDENTIFIERS = {\n  USER_UNIT_OF_WORK: Symbol.for('UserUnitOfWork'),\n  COFFEE_UNIT_OF_WORK: Symbol.for('CoffeeUnitOfWork'),\n};\n","export class FetchUserQuery {\n  constructor(public readonly id: string) {}\n}\n","import { interfaces } from 'inversify-express-utils';\n\nimport { User } from 'ui/common/models/User';\n\nexport class Principal implements interfaces.Principal {\n  public details: User | undefined;\n\n  public constructor(details: User | undefined) {\n    this.details = details;\n  }\n\n  public isAuthenticated(): Promise<boolean> {\n    return Promise.resolve(!!this.details);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public isResourceOwner(resourceId: any): Promise<boolean> {\n    return Promise.resolve(resourceId === true);\n  }\n\n  public isInRole(role: string): Promise<boolean> {\n    return Promise.resolve(role === this.details?.role);\n  }\n}\n"],"mappings":"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","names":[]}