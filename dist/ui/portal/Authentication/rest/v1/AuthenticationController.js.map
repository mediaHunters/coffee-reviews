{"version":3,"sources":["../../../../../../src/ui/portal/Authentication/rest/v1/AuthenticationController.ts","../../../../../../src/core/applicationServices/Authentication/requests/repository/command/SignUpCommand.ts","../../../../../../src/core/CoreModuleSymbols.ts","../../../../../../src/ui/UIModuleSymbols.ts","../../../../../../src/core/applicationServices/Authentication/requests/handler/query/AuthenticationQuery.ts"],"sourcesContent":["import {\n  BaseHttpController,\n  controller,\n  httpPost,\n  requestBody,\n  results,\n} from 'inversify-express-utils';\n\nimport { OK } from 'http-status-codes';\n\nimport { inject } from 'inversify';\n\nimport { SignUpCommand } from 'core/applicationServices/Authentication/requests/repository/command/SignUpCommand';\nimport {\n  DOMAIN_APPLICATION_SERVICE_IDENTIFIERS,\n  DOMAIN_MAPPING_IDENTIFIERS,\n} from 'core/CoreModuleSymbols';\nimport { User } from 'core/domain/User/User';\nimport { IAuthenticationService } from 'core/applicationServices/Authentication/IAuthenticationService';\n\nimport { UIMapper } from 'ui/common/mappings/UIMapper';\nimport {\n  UI_APPLICATION_IDENTIFIERS,\n  UI_IDENTIFIERS,\n  UI_MAPPINGS_IDENTIFIERS,\n} from 'ui/UIModuleSymbols';\nimport { User as UserUI } from 'ui/common/models/User';\nimport { SignUpCommandBody } from 'ui/portal/Authentication/rest/v1/requests/command/SignUpCommandBody';\n\nimport { AuthenticationQueryBody } from 'ui/portal/Authentication/rest/v1/requests/query/AuthenticationQueryBody';\nimport { IAuthenticationHandler } from 'ui/common/config/application/common/auth/IAuthenticationHandler';\nimport { AuthenticationQuery } from 'core/applicationServices/Authentication/requests/handler/query/AuthenticationQuery';\n\n@controller('/v1/auth')\nexport class AuthenticationController extends BaseHttpController {\n  constructor(\n    @inject(DOMAIN_APPLICATION_SERVICE_IDENTIFIERS.AUTHENTICATION_SERVICE)\n    private readonly authenticationService: IAuthenticationService,\n    @inject(UI_APPLICATION_IDENTIFIERS.JWT_AUTHENTICATION_HANDLER)\n    private readonly authenticationHandler: IAuthenticationHandler,\n    @inject(UI_IDENTIFIERS.UI_MAPPER)\n    private readonly uiMapper: UIMapper\n  ) {\n    super();\n  }\n\n  @httpPost('/signup')\n  public async create(\n    @requestBody()\n    { nickname, email, password }: SignUpCommandBody\n  ): Promise<results.JsonResult> {\n    const user = await this.authenticationService.signUp(\n      new SignUpCommand(nickname, email, password)\n    );\n\n    const createdUser = this.uiMapper.mapper.map<User, UserUI>(\n      {\n        destination: UI_MAPPINGS_IDENTIFIERS.USER_UI,\n        source: DOMAIN_MAPPING_IDENTIFIERS.USER_DOMAIN,\n      },\n      user\n    );\n    return this.json(createdUser, OK);\n  }\n\n  @httpPost('/')\n  public async index(\n    @requestBody() { email, password }: AuthenticationQueryBody\n  ): Promise<results.JsonResult> {\n    const authentication = await this.authenticationHandler.authenticate(\n      new AuthenticationQuery(email, password)\n    );\n\n    return this.json(authentication, OK);\n  }\n}\n","export class SignUpCommand {\n  constructor(\n    public readonly nickname: string,\n    public readonly email: string,\n    public readonly password: string\n  ) {}\n}\n","export const DOMAIN_APPLICATION_SERVICE_IDENTIFIERS = {\n  USER_SERVICE: Symbol.for('UserService'),\n  AUTHENTICATION_SERVICE: Symbol.for('AuthenticationService'),\n  COFFEE_SERVICE: Symbol.for('CoffeeService'),\n  REVIEW_SERVICE: Symbol.for('ReviewService'),\n};\n\nexport const DOMAIN_MAPPING_IDENTIFIERS = {\n  USER_DOMAIN: Symbol.for('UserDomain'),\n  ROLE_DOMAIN: Symbol.for('RoleDomain'),\n  COFFEE_DOMAIN: Symbol.for('CoffeeDomain'),\n  REVIEW_DOMAIN: Symbol.for('ReviewDomain'),\n};\n\nexport const DOMAIN_REPOSITORY_IDENTIFIERS = {\n  ROLE_REPOSITORY: Symbol.for('RoleRepository'),\n  USER_REPOSITORY: Symbol.for('UserRepository'),\n  COFFEE_REPOSITORY: Symbol.for('CoffeeRepository'),\n  REVIEW_REPOSITORY: Symbol.for('ReviewRepository'),\n};\n\nexport const DOMAIN_UNIT_OF_WORK_IDENTIFIERS = {\n  USER_UNIT_OF_WORK: Symbol.for('UserUnitOfWork'),\n  COFFEE_UNIT_OF_WORK: Symbol.for('CoffeeUnitOfWork'),\n};\n","export const UI_IDENTIFIERS = {\n  UI_MAPPER: Symbol.for('UIMapper'),\n};\n\nexport const UI_APPLICATION_IDENTIFIERS = {\n  EXPRESS: Symbol.for('Express'),\n  EXPRESS_ROUTER: Symbol.for('ExpressRouter'),\n\n  EXPRESS_APPLICATION: Symbol.for('ExpressApplication'),\n  INVERSIFY_APPLICATION: Symbol.for('InversifyExpressApplication'),\n  JWT_TOKEN_UTIL: Symbol.for('JWTTokenUtil'),\n  JWT_AUTHENTICATION_HANDLER: Symbol.for('JWTAuthenticationHandler'),\n\n  LOGGER: Symbol.for('Logger'),\n  LOGGER_FORMAT: Symbol.for('WinstonFormat'),\n  LOGGER_WINSTON: Symbol.for('WinstonLogger'),\n};\n\nexport const UI_MAPPINGS_IDENTIFIERS = {\n  USER_UI: Symbol.for('UserUI'),\n};\n","export class AuthenticationQuery {\n  constructor(\n    public readonly email: string,\n    public readonly password: string\n  ) {}\n}\n"],"mappings":"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","names":[]}