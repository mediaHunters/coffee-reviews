{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import 'reflect-metadata';\n\nimport { InversifyExpressServer } from 'inversify-express-utils';\n\nimport { AppContainer } from 'dependency/AppContainer';\nimport { ExpressApplication } from 'ui/common/config/application/express/ExpressApplication';\nimport { PORT } from 'ui/common/config/consts/variables';\nimport { UI_APPLICATION_IDENTIFIERS } from 'ui/UIModuleSymbols';\nimport { IOrm } from 'infrastructure/database/orm/IOrm';\nimport { DATABASE_IDENTIFIERS } from 'infrastructure/InfrastructureModuleSymbols';\n\n(async () => {\n  const appContainer = new AppContainer();\n\n  appContainer.init();\n  appContainer\n    .get<ExpressApplication>(UI_APPLICATION_IDENTIFIERS.EXPRESS_APPLICATION)\n    .initialize();\n  appContainer.get<InversifyExpressServer>(\n    UI_APPLICATION_IDENTIFIERS.INVERSIFY_APPLICATION\n  );\n  await appContainer.get<IOrm>(DATABASE_IDENTIFIERS.ORM).initialize();\n  appContainer\n    .get<InversifyExpressServer>(\n      UI_APPLICATION_IDENTIFIERS.INVERSIFY_APPLICATION\n    )\n    .build()\n    // eslint-disable-next-line no-console\n    .listen(PORT, () => console.log(`Server listening on ${PORT}`));\n})();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO;CAWN,YAAY;AACX,QAAM,eAAe,IAAI,aAAa;AAEtC,eAAa,KAAK;AAClB,eACG,IAAwB,2BAA2B,mBAAmB,EACtE,WAAW;AACd,eAAa;AAAA,IACX,2BAA2B;AAAA,EAC7B;AACA,QAAM,aAAa,IAAU,qBAAqB,GAAG,EAAE,WAAW;AAClE,eACG;AAAA,IACC,2BAA2B;AAAA,EAC7B,EACC,MAAM,EAEN,OAAO,MAAM,MAAM,QAAQ,IAAI,uBAAuB,MAAM,CAAC;AAClE,GAAG;","names":[]}