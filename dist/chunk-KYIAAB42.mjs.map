{"version":3,"sources":["../src/dependency/common/ApplicationModule.ts"],"sourcesContent":["import { Format } from 'logform';\nimport { createLogger, format, Logger } from 'winston';\nimport express from 'express';\nimport { interfaces } from 'inversify';\nimport 'ui/index';\n\nimport { BaseModule } from 'dependency/BaseModule';\n\nimport { IApplication } from 'ui/common/config/application/common/IApplication';\nimport { ExpressApplication } from 'ui/common/config/application/express/ExpressApplication';\nimport { ILogger } from 'ui/common/config/logger/ILogger';\nimport { WinstonLogger } from 'ui/common/config/logger/WinstonLogger';\nimport { UI_APPLICATION_IDENTIFIERS } from 'ui/UIModuleSymbols';\nimport { LOG_LEVEL } from 'ui/common/config/consts/variables';\nimport { IAuthenticationHandler } from 'ui/common/config/application/common/auth/IAuthenticationHandler';\nimport { JWTAuthenticationHandler } from 'ui/common/config/application/express/auth/JWTAuthenticationHandler';\nimport { JWTTokenUtil } from 'ui/common/config/application/common/auth/utils/JWTTokenUtil';\n\nexport class ApplicationModule extends BaseModule {\n  constructor() {\n    super((bind: interfaces.Bind): void => {\n      this.init(bind);\n    });\n  }\n\n  public init(bind: interfaces.Bind): void {\n    this.provideExpress(bind);\n    this.provideExpressRouter(bind);\n    this.provideExpressApplication(bind);\n\n    this.provideWinstonLogger(bind);\n    this.provideLoggerFormat(bind);\n    this.provideLogger(bind);\n\n    this.provideJWTAuthenticationHandler(bind);\n    this.provideJWTTokenUtil(bind);\n  }\n\n  private provideExpress(bind: interfaces.Bind): void {\n    bind<express.Application>(\n      UI_APPLICATION_IDENTIFIERS.EXPRESS\n    ).toConstantValue(express());\n  }\n\n  private provideExpressRouter(bind: interfaces.Bind): void {\n    bind<express.Router>(\n      UI_APPLICATION_IDENTIFIERS.EXPRESS_ROUTER\n    ).toConstantValue(\n      express.Router({\n        caseSensitive: false,\n        mergeParams: false,\n        strict: false,\n      })\n    );\n  }\n\n  private provideExpressApplication(bind: interfaces.Bind): void {\n    bind<IApplication>(UI_APPLICATION_IDENTIFIERS.EXPRESS_APPLICATION).to(\n      ExpressApplication\n    );\n  }\n\n  private provideWinstonLogger(bind: interfaces.Bind): void {\n    bind<ILogger>(UI_APPLICATION_IDENTIFIERS.LOGGER_WINSTON).to(WinstonLogger);\n  }\n\n  private provideLoggerFormat(bind: interfaces.Bind): void {\n    bind<Format>(UI_APPLICATION_IDENTIFIERS.LOGGER_FORMAT).toConstantValue(\n      format.combine(\n        format.colorize({\n          all: true,\n        }),\n        format.label({\n          label: '[LOGGER]',\n        }),\n        format.timestamp({\n          format: 'YY-MM-DD HH:MM:SS',\n        }),\n        format.printf(\n          (info) =>\n            `${info.label} ${info.timestamp} [${info.level}] : ${info.message} `\n        )\n      )\n    );\n  }\n\n  private provideLogger(bind: interfaces.Bind): void {\n    bind<Logger>(UI_APPLICATION_IDENTIFIERS.LOGGER).toConstantValue(\n      createLogger({\n        exitOnError: false,\n        level: LOG_LEVEL,\n      })\n    );\n  }\n\n  private provideJWTTokenUtil(bind: interfaces.Bind): void {\n    bind<JWTTokenUtil>(UI_APPLICATION_IDENTIFIERS.JWT_TOKEN_UTIL).to(\n      JWTTokenUtil\n    );\n  }\n\n  private provideJWTAuthenticationHandler(bind: interfaces.Bind): void {\n    bind<IAuthenticationHandler>(\n      UI_APPLICATION_IDENTIFIERS.JWT_AUTHENTICATION_HANDLER\n    ).to(JWTAuthenticationHandler);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,cAAc,cAAsB;AAC7C,OAAO,aAAa;AAgBb,IAAM,oBAAN,cAAgC,WAAW;AAAA,EAChD,cAAc;AACZ,UAAM,CAAC,SAAgC;AACrC,WAAK,KAAK,IAAI;AAAA,IAChB,CAAC;AAAA,EACH;AAAA,EAEO,KAAK,MAA6B;AACvC,SAAK,eAAe,IAAI;AACxB,SAAK,qBAAqB,IAAI;AAC9B,SAAK,0BAA0B,IAAI;AAEnC,SAAK,qBAAqB,IAAI;AAC9B,SAAK,oBAAoB,IAAI;AAC7B,SAAK,cAAc,IAAI;AAEvB,SAAK,gCAAgC,IAAI;AACzC,SAAK,oBAAoB,IAAI;AAAA,EAC/B;AAAA,EAEQ,eAAe,MAA6B;AAClD;AAAA,MACE,2BAA2B;AAAA,IAC7B,EAAE,gBAAgB,QAAQ,CAAC;AAAA,EAC7B;AAAA,EAEQ,qBAAqB,MAA6B;AACxD;AAAA,MACE,2BAA2B;AAAA,IAC7B,EAAE;AAAA,MACA,QAAQ,OAAO;AAAA,QACb,eAAe;AAAA,QACf,aAAa;AAAA,QACb,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEQ,0BAA0B,MAA6B;AAC7D,SAAmB,2BAA2B,mBAAmB,EAAE;AAAA,MACjE;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,qBAAqB,MAA6B;AACxD,SAAc,2BAA2B,cAAc,EAAE,GAAG,aAAa;AAAA,EAC3E;AAAA,EAEQ,oBAAoB,MAA6B;AACvD,SAAa,2BAA2B,aAAa,EAAE;AAAA,MACrD,OAAO;AAAA,QACL,OAAO,SAAS;AAAA,UACd,KAAK;AAAA,QACP,CAAC;AAAA,QACD,OAAO,MAAM;AAAA,UACX,OAAO;AAAA,QACT,CAAC;AAAA,QACD,OAAO,UAAU;AAAA,UACf,QAAQ;AAAA,QACV,CAAC;AAAA,QACD,OAAO;AAAA,UACL,CAAC,SACC,GAAG,KAAK,SAAS,KAAK,cAAc,KAAK,YAAY,KAAK;AAAA,QAC9D;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,cAAc,MAA6B;AACjD,SAAa,2BAA2B,MAAM,EAAE;AAAA,MAC9C,aAAa;AAAA,QACX,aAAa;AAAA,QACb,OAAO;AAAA,MACT,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEQ,oBAAoB,MAA6B;AACvD,SAAmB,2BAA2B,cAAc,EAAE;AAAA,MAC5D;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,gCAAgC,MAA6B;AACnE;AAAA,MACE,2BAA2B;AAAA,IAC7B,EAAE,GAAG,wBAAwB;AAAA,EAC/B;AACF;AAxFa;","names":[]}