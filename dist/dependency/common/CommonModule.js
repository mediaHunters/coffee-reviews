"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CommonModule", {
    enumerable: true,
    get: ()=>CommonModule
});
const _baseModule = require("../BaseModule");
const _dbmapper = require("../../infrastructure/database/mappings/DBMapper");
const _crorm = require("../../infrastructure/database/orm/CROrm");
const _infrastructureModuleSymbols = require("../../infrastructure/InfrastructureModuleSymbols");
const _uimapper = require("../../ui/common/mappings/UIMapper");
const _uimoduleSymbols = require("../../ui/UIModuleSymbols");
const _bunnyCdnClient = require("../../infrastructure/cdn/BunnyCdnClient");
class CommonModule extends _baseModule.BaseModule {
    constructor(){
        super((bind)=>{
            this.init(bind);
        });
    }
    init(bind) {
        this.provideOrm(bind);
        this.provideBunnyCdnClient(bind);
        this.provideDBMapper(bind);
        this.provideUIMapper(bind);
    }
    provideUIMapper(bind) {
        bind(_uimoduleSymbols.UI_IDENTIFIERS.UI_MAPPER).to(_uimapper.UIMapper);
    }
    provideDBMapper(bind) {
        bind(_infrastructureModuleSymbols.INFRASTRUCTURE_IDENTIFIERS.DB_MAPPER).to(_dbmapper.DBMapper);
    }
    provideBunnyCdnClient(bind) {
        bind(_infrastructureModuleSymbols.INFRASTRUCTURE_IDENTIFIERS.BUNNY_CDN_CLIENT).to(_bunnyCdnClient.BunnyCdnClient);
    }
    provideOrm(bind) {
        bind(_infrastructureModuleSymbols.DATABASE_IDENTIFIERS.ORM).to(_crorm.CROrm);
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kZXBlbmRlbmN5L2NvbW1vbi9Db21tb25Nb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW50ZXJmYWNlcyB9IGZyb20gJ2ludmVyc2lmeSc7XG5cbmltcG9ydCB7IEJhc2VNb2R1bGUgfSBmcm9tICdkZXBlbmRlbmN5L0Jhc2VNb2R1bGUnO1xuXG5pbXBvcnQgeyBEQk1hcHBlciB9IGZyb20gJ2luZnJhc3RydWN0dXJlL2RhdGFiYXNlL21hcHBpbmdzL0RCTWFwcGVyJztcbmltcG9ydCB7IENST3JtIH0gZnJvbSAnaW5mcmFzdHJ1Y3R1cmUvZGF0YWJhc2Uvb3JtL0NST3JtJztcbmltcG9ydCB7IElPcm0gfSBmcm9tICdpbmZyYXN0cnVjdHVyZS9kYXRhYmFzZS9vcm0vSU9ybSc7XG5cbmltcG9ydCB7XG4gIERBVEFCQVNFX0lERU5USUZJRVJTLFxuICBJTkZSQVNUUlVDVFVSRV9JREVOVElGSUVSUyxcbn0gZnJvbSAnaW5mcmFzdHJ1Y3R1cmUvSW5mcmFzdHJ1Y3R1cmVNb2R1bGVTeW1ib2xzJztcblxuaW1wb3J0IHsgVUlNYXBwZXIgfSBmcm9tICd1aS9jb21tb24vbWFwcGluZ3MvVUlNYXBwZXInO1xuaW1wb3J0IHsgVUlfSURFTlRJRklFUlMgfSBmcm9tICd1aS9VSU1vZHVsZVN5bWJvbHMnO1xuaW1wb3J0IHsgQnVubnlDZG5DbGllbnQgfSBmcm9tICdpbmZyYXN0cnVjdHVyZS9jZG4vQnVubnlDZG5DbGllbnQnO1xuXG5leHBvcnQgY2xhc3MgQ29tbW9uTW9kdWxlIGV4dGVuZHMgQmFzZU1vZHVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKChiaW5kOiBpbnRlcmZhY2VzLkJpbmQpID0+IHtcbiAgICAgIHRoaXMuaW5pdChiaW5kKTtcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBpbml0KGJpbmQ6IGludGVyZmFjZXMuQmluZCk6IHZvaWQge1xuICAgIHRoaXMucHJvdmlkZU9ybShiaW5kKTtcbiAgICB0aGlzLnByb3ZpZGVCdW5ueUNkbkNsaWVudChiaW5kKTtcblxuICAgIHRoaXMucHJvdmlkZURCTWFwcGVyKGJpbmQpO1xuICAgIHRoaXMucHJvdmlkZVVJTWFwcGVyKGJpbmQpO1xuICB9XG5cbiAgcHJpdmF0ZSBwcm92aWRlVUlNYXBwZXIoYmluZDogaW50ZXJmYWNlcy5CaW5kKTogdm9pZCB7XG4gICAgYmluZDxVSU1hcHBlcj4oVUlfSURFTlRJRklFUlMuVUlfTUFQUEVSKS50byhVSU1hcHBlcik7XG4gIH1cblxuICBwcml2YXRlIHByb3ZpZGVEQk1hcHBlcihiaW5kOiBpbnRlcmZhY2VzLkJpbmQpOiB2b2lkIHtcbiAgICBiaW5kPERCTWFwcGVyPihJTkZSQVNUUlVDVFVSRV9JREVOVElGSUVSUy5EQl9NQVBQRVIpLnRvKERCTWFwcGVyKTtcbiAgfVxuXG4gIHByaXZhdGUgcHJvdmlkZUJ1bm55Q2RuQ2xpZW50KGJpbmQ6IGludGVyZmFjZXMuQmluZCk6IHZvaWQge1xuICAgIGJpbmQ8QnVubnlDZG5DbGllbnQ+KElORlJBU1RSVUNUVVJFX0lERU5USUZJRVJTLkJVTk5ZX0NETl9DTElFTlQpLnRvKFxuICAgICAgQnVubnlDZG5DbGllbnRcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBwcm92aWRlT3JtKGJpbmQ6IGludGVyZmFjZXMuQmluZCk6IHZvaWQge1xuICAgIGJpbmQ8SU9ybT4oREFUQUJBU0VfSURFTlRJRklFUlMuT1JNKS50byhDUk9ybSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJDb21tb25Nb2R1bGUiLCJCYXNlTW9kdWxlIiwiY29uc3RydWN0b3IiLCJiaW5kIiwiaW5pdCIsInByb3ZpZGVPcm0iLCJwcm92aWRlQnVubnlDZG5DbGllbnQiLCJwcm92aWRlREJNYXBwZXIiLCJwcm92aWRlVUlNYXBwZXIiLCJVSV9JREVOVElGSUVSUyIsIlVJX01BUFBFUiIsInRvIiwiVUlNYXBwZXIiLCJJTkZSQVNUUlVDVFVSRV9JREVOVElGSUVSUyIsIkRCX01BUFBFUiIsIkRCTWFwcGVyIiwiQlVOTllfQ0ROX0NMSUVOVCIsIkJ1bm55Q2RuQ2xpZW50IiwiREFUQUJBU0VfSURFTlRJRklFUlMiLCJPUk0iLCJDUk9ybSJdLCJtYXBwaW5ncyI6Ijs7OzsrQkFpQmFBOzthQUFBQTs7NEJBZmM7MEJBRUY7dUJBQ0g7NkNBTWY7MEJBRWtCO2lDQUNNO2dDQUNBO0FBRXhCLE1BQU1BLHFCQUFxQkMsc0JBQVU7SUFDMUNDLGFBQWM7UUFDWixLQUFLLENBQUMsQ0FBQ0MsT0FBMEI7WUFDL0IsSUFBSSxDQUFDQyxJQUFJLENBQUNEO1FBQ1o7SUFDRjtJQUVPQyxLQUFLRCxJQUFxQixFQUFRO1FBQ3ZDLElBQUksQ0FBQ0UsVUFBVSxDQUFDRjtRQUNoQixJQUFJLENBQUNHLHFCQUFxQixDQUFDSDtRQUUzQixJQUFJLENBQUNJLGVBQWUsQ0FBQ0o7UUFDckIsSUFBSSxDQUFDSyxlQUFlLENBQUNMO0lBQ3ZCO0lBRVFLLGdCQUFnQkwsSUFBcUIsRUFBUTtRQUNuREEsS0FBZU0sK0JBQWMsQ0FBQ0MsU0FBUyxFQUFFQyxFQUFFLENBQUNDLGtCQUFRO0lBQ3REO0lBRVFMLGdCQUFnQkosSUFBcUIsRUFBUTtRQUNuREEsS0FBZVUsdURBQTBCLENBQUNDLFNBQVMsRUFBRUgsRUFBRSxDQUFDSSxrQkFBUTtJQUNsRTtJQUVRVCxzQkFBc0JILElBQXFCLEVBQVE7UUFDekRBLEtBQXFCVSx1REFBMEIsQ0FBQ0csZ0JBQWdCLEVBQUVMLEVBQUUsQ0FDbEVNLDhCQUFjO0lBRWxCO0lBRVFaLFdBQVdGLElBQXFCLEVBQVE7UUFDOUNBLEtBQVdlLGlEQUFvQixDQUFDQyxHQUFHLEVBQUVSLEVBQUUsQ0FBQ1MsWUFBSztJQUMvQztBQUNGIn0=