{"version":3,"sources":["../../../../src/core/applicationServices/Review/ReviewService.ts","../../../../src/core/CoreModuleSymbols.ts","../../../../src/core/domainServices/Review/requests/command/AddReviewRepositoryCommand.ts","../../../../src/core/domainServices/Review/requests/query/GetReviewsRepositoryQuery.ts","../../../../src/core/domainServices/Review/requests/command/UpdateReviewRepositoryCommand.ts","../../../../src/core/domainServices/Review/requests/command/DeleteReviewRepositoryCommand.ts"],"sourcesContent":["import { inject, injectable } from 'inversify';\n\nimport { UpdateResult } from 'typeorm';\n\nimport { IReviewService } from 'core/applicationServices/Review/IReviewService';\nimport { AddReviewCommand } from 'core/applicationServices/Review/requests/command/AddReviewCommand';\nimport { DOMAIN_REPOSITORY_IDENTIFIERS } from 'core/CoreModuleSymbols';\nimport { Review } from 'core/domain/Review/Review';\nimport { IReviewRepository } from 'core/domainServices/Review/IReviewRepository';\nimport { AddReviewRepositoryCommand } from 'core/domainServices/Review/requests/command/AddReviewRepositoryCommand';\nimport { GetReviewsRepositoryQuery } from 'core/domainServices/Review/requests/query/GetReviewsRepositoryQuery';\nimport { GetUserReviewsQuery } from 'core/applicationServices/Review/requests/query/GetUserReviewsQuery';\nimport { UpdateReviewCommand } from 'core/applicationServices/Review/requests/command/UpdateReviewCommand';\nimport { UpdateReviewRepositoryCommand } from 'core/domainServices/Review/requests/command/UpdateReviewRepositoryCommand';\nimport { DeleteReviewCommand } from 'core/applicationServices/Review/requests/command/DeleteReviewCommand';\nimport { DeleteReviewRepositoryCommand } from 'core/domainServices/Review/requests/command/DeleteReviewRepositoryCommand';\n\n@injectable()\nexport class ReviewService implements IReviewService {\n  constructor(\n    @inject(DOMAIN_REPOSITORY_IDENTIFIERS.REVIEW_REPOSITORY)\n    private readonly reviewRepository: IReviewRepository\n  ) {}\n\n  getAll({ userId }: GetUserReviewsQuery): Promise<Review[]> {\n    return this.reviewRepository.getReviews(\n      new GetReviewsRepositoryQuery(userId)\n    );\n  }\n\n  add({\n    userId,\n    coffeeId,\n    rating,\n    look,\n    smell,\n    taste,\n  }: AddReviewCommand): Promise<Review> {\n    return this.reviewRepository.addReview(\n      new AddReviewRepositoryCommand(\n        userId,\n        coffeeId,\n        rating,\n        look,\n        smell,\n        taste\n      )\n    );\n  }\n\n  update({ reviewId, review }: UpdateReviewCommand): Promise<UpdateResult> {\n    return this.reviewRepository.updateReview(\n      new UpdateReviewRepositoryCommand(review, reviewId)\n    );\n  }\n\n  delete({ reviewId }: DeleteReviewCommand): Promise<Review> {\n    return this.reviewRepository.deleteReview(\n      new DeleteReviewRepositoryCommand(reviewId)\n    );\n  }\n}\n","export const DOMAIN_APPLICATION_SERVICE_IDENTIFIERS = {\n  USER_SERVICE: Symbol.for('UserService'),\n  AUTHENTICATION_SERVICE: Symbol.for('AuthenticationService'),\n  COFFEE_SERVICE: Symbol.for('CoffeeService'),\n  REVIEW_SERVICE: Symbol.for('ReviewService'),\n};\n\nexport const DOMAIN_MAPPING_IDENTIFIERS = {\n  USER_DOMAIN: Symbol.for('UserDomain'),\n  ROLE_DOMAIN: Symbol.for('RoleDomain'),\n  COFFEE_DOMAIN: Symbol.for('CoffeeDomain'),\n  REVIEW_DOMAIN: Symbol.for('ReviewDomain'),\n};\n\nexport const DOMAIN_REPOSITORY_IDENTIFIERS = {\n  ROLE_REPOSITORY: Symbol.for('RoleRepository'),\n  USER_REPOSITORY: Symbol.for('UserRepository'),\n  COFFEE_REPOSITORY: Symbol.for('CoffeeRepository'),\n  REVIEW_REPOSITORY: Symbol.for('ReviewRepository'),\n};\n\nexport const DOMAIN_UNIT_OF_WORK_IDENTIFIERS = {\n  USER_UNIT_OF_WORK: Symbol.for('UserUnitOfWork'),\n  COFFEE_UNIT_OF_WORK: Symbol.for('CoffeeUnitOfWork'),\n};\n","export class AddReviewRepositoryCommand {\n  constructor(\n    public readonly userId: string,\n    public readonly coffeeId: string,\n    public readonly rating: number,\n    public readonly look: number,\n    public readonly smell: number,\n    public readonly taste: number\n  ) {}\n}\n","export class GetReviewsRepositoryQuery {\n  constructor(public readonly userId: string) {}\n}\n","import { Review } from 'core/domain/Review/Review';\n\nexport class UpdateReviewRepositoryCommand {\n  constructor(\n    public readonly review: Partial<Review>,\n    public readonly reviewId: string\n  ) {}\n}\n","export class DeleteReviewRepositoryCommand {\n  constructor(public readonly reviewId: string) {}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmC;;;ACA5B,IAAM,yCAAyC;AAAA,EACpD,cAAc,OAAO,IAAI,aAAa;AAAA,EACtC,wBAAwB,OAAO,IAAI,uBAAuB;AAAA,EAC1D,gBAAgB,OAAO,IAAI,eAAe;AAAA,EAC1C,gBAAgB,OAAO,IAAI,eAAe;AAC5C;AAEO,IAAM,6BAA6B;AAAA,EACxC,aAAa,OAAO,IAAI,YAAY;AAAA,EACpC,aAAa,OAAO,IAAI,YAAY;AAAA,EACpC,eAAe,OAAO,IAAI,cAAc;AAAA,EACxC,eAAe,OAAO,IAAI,cAAc;AAC1C;AAEO,IAAM,gCAAgC;AAAA,EAC3C,iBAAiB,OAAO,IAAI,gBAAgB;AAAA,EAC5C,iBAAiB,OAAO,IAAI,gBAAgB;AAAA,EAC5C,mBAAmB,OAAO,IAAI,kBAAkB;AAAA,EAChD,mBAAmB,OAAO,IAAI,kBAAkB;AAClD;AAEO,IAAM,kCAAkC;AAAA,EAC7C,mBAAmB,OAAO,IAAI,gBAAgB;AAAA,EAC9C,qBAAqB,OAAO,IAAI,kBAAkB;AACpD;;;ACxBO,IAAM,6BAAN,MAAiC;AAAA,EACtC,YACkB,QACA,UACA,QACA,MACA,OACA,OAChB;AANgB;AACA;AACA;AACA;AACA;AACA;AAAA,EACf;AACL;AATa;;;ACAN,IAAM,4BAAN,MAAgC;AAAA,EACrC,YAA4B,QAAgB;AAAhB;AAAA,EAAiB;AAC/C;AAFa;;;ACEN,IAAM,gCAAN,MAAoC;AAAA,EACzC,YACkB,QACA,UAChB;AAFgB;AACA;AAAA,EACf;AACL;AALa;;;ACFN,IAAM,gCAAN,MAAoC;AAAA,EACzC,YAA4B,UAAkB;AAAlB;AAAA,EAAmB;AACjD;AAFa;;;ALkBN,IAAM,gBAAN,MAA8C;AAAA,EACnD,YAEmB,kBACjB;AADiB;AAAA,EAChB;AAAA,EAEH,OAAO,EAAE,OAAO,GAA2C;AACzD,WAAO,KAAK,iBAAiB;AAAA,MAC3B,IAAI,0BAA0B,MAAM;AAAA,IACtC;AAAA,EACF;AAAA,EAEA,IAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAsC;AACpC,WAAO,KAAK,iBAAiB;AAAA,MAC3B,IAAI;AAAA,QACF;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,OAAO,EAAE,UAAU,OAAO,GAA+C;AACvE,WAAO,KAAK,iBAAiB;AAAA,MAC3B,IAAI,8BAA8B,QAAQ,QAAQ;AAAA,IACpD;AAAA,EACF;AAAA,EAEA,OAAO,EAAE,SAAS,GAAyC;AACzD,WAAO,KAAK,iBAAiB;AAAA,MAC3B,IAAI,8BAA8B,QAAQ;AAAA,IAC5C;AAAA,EACF;AACF;AA3Ca;AAAA,gBAAN;AAAA,MADN,6BAAW;AAAA,EAGR,uBAAC,yBAAO,8BAA8B,iBAAiB;AAAA,GAF9C;","names":[]}