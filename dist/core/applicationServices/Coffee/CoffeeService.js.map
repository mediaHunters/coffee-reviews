{"version":3,"sources":["../../../../src/core/applicationServices/Coffee/CoffeeService.ts","../../../../src/core/CoreModuleSymbols.ts","../../../../src/core/domainServices/Coffee/requests/UnitOfWork/command/AddCoffeeUnitOfWorkRepositoryCommand.ts","../../../../src/core/domainServices/Coffee/requests/UnitOfWork/command/DeleteCoffeeUnitOfWorkRepositoryCommand.ts","../../../../src/core/domainServices/Coffee/requests/UnitOfWork/query/FindCoffeeRepositoryQuery.ts"],"sourcesContent":["import { inject, injectable } from 'inversify';\n\nimport { UpdateResult } from 'typeorm';\n\nimport { ICoffeeService } from 'core/applicationServices/Coffee/ICoffeeService';\nimport {\n  DOMAIN_REPOSITORY_IDENTIFIERS,\n  DOMAIN_UNIT_OF_WORK_IDENTIFIERS,\n} from 'core/CoreModuleSymbols';\nimport { Coffee } from 'core/domain/Coffee/Coffee';\nimport { ICoffeeUnitOfWork } from 'core/domainServices/Coffee/ICoffeeUnitOfWork';\nimport { CreateCoffeeUnitOfWorkRepositoryCommand } from 'core/domainServices/Coffee/requests/UnitOfWork/command/AddCoffeeUnitOfWorkRepositoryCommand';\nimport { DeleteCoffeeCommand } from 'core/applicationServices/Coffee/requests/command/DeleteCoffeeCommand';\nimport { DeleteCoffeeUnitOfWorkRepositoryCommand } from 'core/domainServices/Coffee/requests/UnitOfWork/command/DeleteCoffeeUnitOfWorkRepositoryCommand';\nimport { ICoffeeRepository } from 'core/domainServices/Coffee/ICoffeeRepository';\nimport { FindOneCoffeeRepositoryQuery } from 'core/domainServices/Coffee/requests/UnitOfWork/query/FindCoffeeRepositoryQuery';\nimport { CreateCoffeeCommand } from 'core/applicationServices/Coffee/requests/command/AddCoffeeCommand';\nimport { UpdateCoffeeCommand } from 'core/applicationServices/Coffee/requests/command/UpdateCoffeeCommand';\n\n@injectable()\nexport class CoffeeService implements ICoffeeService {\n  constructor(\n    @inject(DOMAIN_UNIT_OF_WORK_IDENTIFIERS.COFFEE_UNIT_OF_WORK)\n    private readonly coffeUnitOfWork: ICoffeeUnitOfWork,\n    @inject(DOMAIN_REPOSITORY_IDENTIFIERS.COFFEE_REPOSITORY)\n    private readonly coffeRepository: ICoffeeRepository\n  ) {}\n\n  findAll(): Promise<Coffee[]> {\n    return this.coffeRepository.findAllCoffees();\n  }\n\n  findOne({ id }: FindOneCoffeeRepositoryQuery): Promise<Coffee> {\n    return this.coffeRepository.findOneCoffee(\n      new FindOneCoffeeRepositoryQuery(id)\n    );\n  }\n\n  create({\n    brand,\n    name,\n    type,\n    imgUrl,\n    description,\n    burntLvl,\n    reflink,\n    CoffeeStatus,\n  }: CreateCoffeeCommand): Promise<Coffee> {\n    return this.coffeRepository.createCoffee(\n      new CreateCoffeeUnitOfWorkRepositoryCommand(\n        brand,\n        name,\n        type,\n        imgUrl,\n        description,\n        burntLvl,\n        CoffeeStatus,\n        reflink || ''\n      )\n    );\n  }\n\n  update({ coffee, coffeeId }: UpdateCoffeeCommand): Promise<UpdateResult> {\n    return this.coffeRepository.updateCoffee({ coffee, coffeeId });\n  }\n\n  delete(command: DeleteCoffeeCommand): Promise<Coffee> {\n    return this.coffeUnitOfWork.delete(\n      new DeleteCoffeeUnitOfWorkRepositoryCommand(command.id)\n    );\n  }\n\n  // addReview({\n  //   userId,\n  //   coffeeId,\n  //   look,\n  //   smell,\n  //   taste,\n  // }: AddCoffeeReviewCommand): Promise<Coffee> {\n  //   return this.CoffeUnitOfWork.addCoffeeReview(\n  //     new AddCoffeeReviewUnitOfWorkRepositoryCommand(\n  //       userId,\n  //       coffeeId,\n  //       look,\n  //       smell,\n  //       taste\n  //     )\n  //   );\n  // }\n\n  // sortAndPaginate({ sortBy, skip, take }: SearchQuery): Promise<Coffee> {\n  //   return this.CoffeRepository.sortAndPaginate(\n  //     new SearchRepositoryQuery(sortBy, skip, take)\n  //   );\n  // }\n}\n","export const DOMAIN_APPLICATION_SERVICE_IDENTIFIERS = {\n  USER_SERVICE: Symbol.for('UserService'),\n  AUTHENTICATION_SERVICE: Symbol.for('AuthenticationService'),\n  COFFEE_SERVICE: Symbol.for('CoffeeService'),\n  REVIEW_SERVICE: Symbol.for('ReviewService'),\n};\n\nexport const DOMAIN_MAPPING_IDENTIFIERS = {\n  USER_DOMAIN: Symbol.for('UserDomain'),\n  ROLE_DOMAIN: Symbol.for('RoleDomain'),\n  COFFEE_DOMAIN: Symbol.for('CoffeeDomain'),\n  REVIEW_DOMAIN: Symbol.for('ReviewDomain'),\n};\n\nexport const DOMAIN_REPOSITORY_IDENTIFIERS = {\n  ROLE_REPOSITORY: Symbol.for('RoleRepository'),\n  USER_REPOSITORY: Symbol.for('UserRepository'),\n  COFFEE_REPOSITORY: Symbol.for('CoffeeRepository'),\n  REVIEW_REPOSITORY: Symbol.for('ReviewRepository'),\n};\n\nexport const DOMAIN_UNIT_OF_WORK_IDENTIFIERS = {\n  USER_UNIT_OF_WORK: Symbol.for('UserUnitOfWork'),\n  COFFEE_UNIT_OF_WORK: Symbol.for('CoffeeUnitOfWork'),\n};\n","export class CreateCoffeeUnitOfWorkRepositoryCommand {\n  constructor(\n    public readonly brand: string,\n    public readonly name: string,\n    public readonly type: string,\n    public readonly imgUrl: string,\n    public readonly description: string,\n    public readonly burntLvl: string,\n    public readonly reflink: string,\n    public readonly CoffeeStatus: string\n  ) {}\n}\n","export class DeleteCoffeeUnitOfWorkRepositoryCommand {\n  constructor(public readonly id: string) {}\n}\n","export class FindOneCoffeeRepositoryQuery {\n  constructor(public readonly id: string) {}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmC;;;ACA5B,IAAM,yCAAyC;AAAA,EACpD,cAAc,OAAO,IAAI,aAAa;AAAA,EACtC,wBAAwB,OAAO,IAAI,uBAAuB;AAAA,EAC1D,gBAAgB,OAAO,IAAI,eAAe;AAAA,EAC1C,gBAAgB,OAAO,IAAI,eAAe;AAC5C;AAEO,IAAM,6BAA6B;AAAA,EACxC,aAAa,OAAO,IAAI,YAAY;AAAA,EACpC,aAAa,OAAO,IAAI,YAAY;AAAA,EACpC,eAAe,OAAO,IAAI,cAAc;AAAA,EACxC,eAAe,OAAO,IAAI,cAAc;AAC1C;AAEO,IAAM,gCAAgC;AAAA,EAC3C,iBAAiB,OAAO,IAAI,gBAAgB;AAAA,EAC5C,iBAAiB,OAAO,IAAI,gBAAgB;AAAA,EAC5C,mBAAmB,OAAO,IAAI,kBAAkB;AAAA,EAChD,mBAAmB,OAAO,IAAI,kBAAkB;AAClD;AAEO,IAAM,kCAAkC;AAAA,EAC7C,mBAAmB,OAAO,IAAI,gBAAgB;AAAA,EAC9C,qBAAqB,OAAO,IAAI,kBAAkB;AACpD;;;ACxBO,IAAM,0CAAN,MAA8C;AAAA,EACnD,YACkB,OACA,MACA,MACA,QACA,aACA,UACA,SACA,cAChB;AARgB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,EACf;AACL;AAXa;;;ACAN,IAAM,0CAAN,MAA8C;AAAA,EACnD,YAA4B,IAAY;AAAZ;AAAA,EAAa;AAC3C;AAFa;;;ACAN,IAAM,+BAAN,MAAmC;AAAA,EACxC,YAA4B,IAAY;AAAZ;AAAA,EAAa;AAC3C;AAFa;;;AJoBN,IAAM,gBAAN,MAA8C;AAAA,EACnD,YAEmB,iBAEA,iBACjB;AAHiB;AAEA;AAAA,EAChB;AAAA,EAEH,UAA6B;AAC3B,WAAO,KAAK,gBAAgB,eAAe;AAAA,EAC7C;AAAA,EAEA,QAAQ,EAAE,GAAG,GAAkD;AAC7D,WAAO,KAAK,gBAAgB;AAAA,MAC1B,IAAI,6BAA6B,EAAE;AAAA,IACrC;AAAA,EACF;AAAA,EAEA,OAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAyC;AACvC,WAAO,KAAK,gBAAgB;AAAA,MAC1B,IAAI;AAAA,QACF;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,WAAW;AAAA,MACb;AAAA,IACF;AAAA,EACF;AAAA,EAEA,OAAO,EAAE,QAAQ,SAAS,GAA+C;AACvE,WAAO,KAAK,gBAAgB,aAAa,EAAE,QAAQ,SAAS,CAAC;AAAA,EAC/D;AAAA,EAEA,OAAO,SAA+C;AACpD,WAAO,KAAK,gBAAgB;AAAA,MAC1B,IAAI,wCAAwC,QAAQ,EAAE;AAAA,IACxD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBF;AA3Ea;AAAA,gBAAN;AAAA,MADN,6BAAW;AAAA,EAGR,uBAAC,yBAAO,gCAAgC,mBAAmB;AAAA,EAE3D,uBAAC,yBAAO,8BAA8B,iBAAiB;AAAA,GAJ9C;","names":[]}