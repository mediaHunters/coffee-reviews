{"version":3,"sources":["../../../../src/core/applicationServices/User/UserService.ts","../../../../src/core/domainServices/User/request/Repository/query/GetUserRepositoryQuery.ts","../../../../src/core/domainServices/User/request/Repository/query/GetUsersRepositoryQuery.ts","../../../../src/core/CoreModuleSymbols.ts","../../../../src/core/domainServices/User/request/UnitOfWorkRepository/command/DeleteUserUnitOfWorkRepositoryCommand.ts"],"sourcesContent":["import { inject, injectable } from 'inversify';\n\nimport { GetUserRepositoryQuery } from 'core/domainServices/User/request/Repository/query/GetUserRepositoryQuery';\nimport { IUserService } from 'core/applicationServices/User/IUserService';\nimport { FetchUserQuery } from 'core/applicationServices/User/requests/query/FetchUserQuery';\nimport { User } from 'core/domain/User/User';\nimport { IUserRepository } from 'core/domainServices/User/IUserRepository';\n\nimport { GetUsersRepositoryQuery } from 'core/domainServices/User/request/Repository/query/GetUsersRepositoryQuery';\nimport {\n  DOMAIN_REPOSITORY_IDENTIFIERS,\n  DOMAIN_UNIT_OF_WORK_IDENTIFIERS,\n} from 'core/CoreModuleSymbols';\nimport { RemoveUserCommand } from 'core/applicationServices/User/requests/command/RemoveUserCommand';\nimport { IUserUnitOfWork } from 'core/domainServices/User/IUserUnitOfWork';\nimport { DeleteUserUnitOfWorkRepositoryCommand } from 'core/domainServices/User/request/UnitOfWorkRepository/command/DeleteUserUnitOfWorkRepositoryCommand';\n\n@injectable()\nexport class UserService implements IUserService {\n  constructor(\n    @inject(DOMAIN_REPOSITORY_IDENTIFIERS.USER_REPOSITORY)\n    private readonly userRepository: IUserRepository,\n    @inject(DOMAIN_UNIT_OF_WORK_IDENTIFIERS.USER_UNIT_OF_WORK)\n    private readonly userUnitOfWork: IUserUnitOfWork\n  ) {}\n\n  removeUser({ id }: RemoveUserCommand): Promise<User> {\n    return this.userUnitOfWork.deleteUser(\n      new DeleteUserUnitOfWorkRepositoryCommand(id)\n    );\n  }\n\n  fetchUser({ id }: FetchUserQuery): Promise<User> {\n    return this.userRepository.getUser(new GetUserRepositoryQuery(id));\n  }\n\n  fetchUsers(): Promise<User[]> {\n    return this.userRepository.getUsers(new GetUsersRepositoryQuery());\n  }\n}\n","export class GetUserRepositoryQuery {\n  constructor(public readonly id: string) {}\n}\n","export class GetUsersRepositoryQuery {}\n","export const DOMAIN_APPLICATION_SERVICE_IDENTIFIERS = {\n  USER_SERVICE: Symbol.for('UserService'),\n  AUTHENTICATION_SERVICE: Symbol.for('AuthenticationService'),\n  COFFEE_SERVICE: Symbol.for('CoffeeService'),\n  REVIEW_SERVICE: Symbol.for('ReviewService'),\n};\n\nexport const DOMAIN_MAPPING_IDENTIFIERS = {\n  USER_DOMAIN: Symbol.for('UserDomain'),\n  ROLE_DOMAIN: Symbol.for('RoleDomain'),\n  COFFEE_DOMAIN: Symbol.for('CoffeeDomain'),\n  REVIEW_DOMAIN: Symbol.for('ReviewDomain'),\n};\n\nexport const DOMAIN_REPOSITORY_IDENTIFIERS = {\n  ROLE_REPOSITORY: Symbol.for('RoleRepository'),\n  USER_REPOSITORY: Symbol.for('UserRepository'),\n  COFFEE_REPOSITORY: Symbol.for('CoffeeRepository'),\n  REVIEW_REPOSITORY: Symbol.for('ReviewRepository'),\n};\n\nexport const DOMAIN_UNIT_OF_WORK_IDENTIFIERS = {\n  USER_UNIT_OF_WORK: Symbol.for('UserUnitOfWork'),\n  COFFEE_UNIT_OF_WORK: Symbol.for('CoffeeUnitOfWork'),\n};\n","export class DeleteUserUnitOfWorkRepositoryCommand {\n  constructor(public readonly id: string) {}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmC;;;ACA5B,IAAM,yBAAN,MAA6B;AAAA,EAClC,YAA4B,IAAY;AAAZ;AAAA,EAAa;AAC3C;;;ACFO,IAAM,0BAAN,MAA8B;AAAC;;;ACA/B,IAAM,yCAAyC;AAAA,EACpD,cAAc,OAAO,IAAI,aAAa;AAAA,EACtC,wBAAwB,OAAO,IAAI,uBAAuB;AAAA,EAC1D,gBAAgB,OAAO,IAAI,eAAe;AAAA,EAC1C,gBAAgB,OAAO,IAAI,eAAe;AAC5C;AAEO,IAAM,6BAA6B;AAAA,EACxC,aAAa,OAAO,IAAI,YAAY;AAAA,EACpC,aAAa,OAAO,IAAI,YAAY;AAAA,EACpC,eAAe,OAAO,IAAI,cAAc;AAAA,EACxC,eAAe,OAAO,IAAI,cAAc;AAC1C;AAEO,IAAM,gCAAgC;AAAA,EAC3C,iBAAiB,OAAO,IAAI,gBAAgB;AAAA,EAC5C,iBAAiB,OAAO,IAAI,gBAAgB;AAAA,EAC5C,mBAAmB,OAAO,IAAI,kBAAkB;AAAA,EAChD,mBAAmB,OAAO,IAAI,kBAAkB;AAClD;AAEO,IAAM,kCAAkC;AAAA,EAC7C,mBAAmB,OAAO,IAAI,gBAAgB;AAAA,EAC9C,qBAAqB,OAAO,IAAI,kBAAkB;AACpD;;;ACxBO,IAAM,wCAAN,MAA4C;AAAA,EACjD,YAA4B,IAAY;AAAZ;AAAA,EAAa;AAC3C;;;AJgBO,IAAM,cAAN,MAA0C;AAAA,EAC/C,YAEmB,gBAEA,gBACjB;AAHiB;AAEA;AAAA,EAChB;AAAA,EAEH,WAAW,EAAE,GAAG,GAAqC;AACnD,WAAO,KAAK,eAAe;AAAA,MACzB,IAAI,sCAAsC,EAAE;AAAA,IAC9C;AAAA,EACF;AAAA,EAEA,UAAU,EAAE,GAAG,GAAkC;AAC/C,WAAO,KAAK,eAAe,QAAQ,IAAI,uBAAuB,EAAE,CAAC;AAAA,EACnE;AAAA,EAEA,aAA8B;AAC5B,WAAO,KAAK,eAAe,SAAS,IAAI,wBAAwB,CAAC;AAAA,EACnE;AACF;AArBa,cAAN;AAAA,MADN,6BAAW;AAAA,EAGR,uBAAC,yBAAO,8BAA8B,eAAe;AAAA,EAErD,uBAAC,yBAAO,gCAAgC,iBAAiB;AAAA,GAJhD;","names":[]}